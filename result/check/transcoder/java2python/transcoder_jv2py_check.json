{
    "MAXIMUM_VALUE_CHOICE_EITHER_DIVIDING_CONSIDERING": {
        "change": [
            {
                "type": "del",
                "line": 4,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 4,
                "content": "        res [ i ] = max ( i , ( res [ i // 2 ] + res [ i // 3 ] + res [ i // 4 ] + res [ i // 5 ] ) )",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        res [ i ] = max ( i , ( res [ i // 2 ] + res [ i // 3 ] + res [ i // 4 ] + res [ i // 5 ] ) )",
                "changetype": "type_CallFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMUM_VALUE_CHOICE_EITHER_DIVIDING_CONSIDERING.py:11: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/MAXIMUM_VALUE_CHOICE_EITHER_DIVIDING_CONSIDERING.py:11: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/MAXIMUM_VALUE_CHOICE_EITHER_DIVIDING_CONSIDERING.py:11: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/MAXIMUM_VALUE_CHOICE_EITHER_DIVIDING_CONSIDERING.py:11: note:     def __getitem__(self, slice, /) -> list[int]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "FIND_SUM_MODULO_K_FIRST_N_NATURAL_NUMBER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_NUMBER_OF_OCCURRENCES_OR_FREQUENCY_IN_A_SORTED_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "LONGEST_SUBARRAY_COUNT_1S_ONE_COUNT_0S": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/LONGEST_SUBARRAY_COUNT_1S_ONE_COUNT_0S.py:16: error: \"dict[int, int]\" has no attribute \"has_key\"  [attr-defined]\nresult2/check/transcoder/java2python/python_typed/LONGEST_SUBARRAY_COUNT_1S_ONE_COUNT_0S.py:18: error: \"dict[int, int]\" has no attribute \"has_key\"  [attr-defined]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "COUNT_NUMBER_WAYS_TILE_FLOOR_SIZE_N_X_M_USING_1_X_M_SIZE_TILES": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_AVERAGE_SUM_PARTITION_ARRAY": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "    return dp",
                "changetype": "type_RetPrimclct"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMUM_AVERAGE_SUM_PARTITION_ARRAY.py:10: error: Incompatible types in assignment (expression has type \"ndarray[Any, dtype[floating[_64Bit]]]\", variable has type \"list[float]\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/MAXIMUM_AVERAGE_SUM_PARTITION_ARRAY.py:14: error: Incompatible types in assignment (expression has type \"ndarray[Any, dtype[floating[_64Bit]]]\", variable has type \"list[float]\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/MAXIMUM_AVERAGE_SUM_PARTITION_ARRAY.py:22: error: Incompatible return value type (got \"list[float]\", expected \"float\")  [return-value]\nFound 3 errors in 1 file (checked 1 source file)\n"
    },
    "LENGTH_LONGEST_SUB_STRING_CAN_MAKE_REMOVED": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CHECK_GIVEN_STRING_ROTATION_PALINDROME": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "NUMBER_IS_DIVISIBLE_BY_29_OR_NOT": {
        "change": [
            {
                "type": "del",
                "line": 4,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 4,
                "content": "        n //= 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        n //= 10",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/NUMBER_IS_DIVISIBLE_BY_29_OR_NOT.py:11: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "COUNT_DISTINCT_NON_NEGATIVE_PAIRS_X_Y_SATISFY_INEQUALITY_XX_YY_N_2_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MIDDLE_OF_THREE_USING_MINIMUM_COMPARISONS_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SMALLEST_OF_THREE_INTEGERS_WITHOUT_COMPARISON_OPERATORS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_CALCULATE_VOLUME_OCTAHEDRON": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": " ( ( side ** 2 ) * ( math.sqrt ( 2 ) / 3 ) )",
                "changetype": "longcomp"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": " ( ( side ** 2 ) * ( math.sqrt ( 2 ) / 3 ) )",
                "new": " ((side*side*side)*(math.sqrt(2)/3))",
                "changetype": "longcomp"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SUBARRAYS_DISTINCT_ELEMENTS": {
        "change": [
            {
                "type": "del",
                "line": 9,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 9,
                "content": "        ans += ( ( j - i ) * ( j - i + 1 ) ) // 2",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        ans += ( ( j - i ) * ( j - i + 1 ) ) // 2",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SUBARRAYS_DISTINCT_ELEMENTS.py:16: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SEARCH_INSERT_AND_DELETE_IN_A_SORTED_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_SUM_SUBARRAY_REMOVING_ONE_ELEMENT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_POINTS_INTERSECTION_N_CIRCLES": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "HOW_TO_TURN_OFF_A_PARTICULAR_BIT_IN_A_NUMBER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMUM_COST_SORT_MATRIX_NUMBERS_0_N2_1": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "    i_des , j_des , q = mat [ : n ] , mat [ n : ] , mat [ n : ]",
                "changetype": "type_AssignPrimclct"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    tot_energy = 0",
                "changetype": "type_AssignPrimclct"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    i_des , j_des , q = mat [ : n ] , mat [ n : ] , mat [ n : ]",
                "changetype": "type_AssignPrimclct"
            },
            {
                "type": "del",
                "line": 6,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 6,
                "content": "            q = mat [ i ] [ j ] // n",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "            q = mat [ i ] [ j ] // n",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MINIMUM_COST_SORT_MATRIX_NUMBERS_0_N2_1.py:9: error: Incompatible types in assignment (expression has type \"list[list[int]]\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_COST_SORT_MATRIX_NUMBERS_0_N2_1.py:10: error: Incompatible types in assignment (expression has type \"list[list[int]]\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_COST_SORT_MATRIX_NUMBERS_0_N2_1.py:11: error: Incompatible types in assignment (expression has type \"list[list[int]]\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_COST_SORT_MATRIX_NUMBERS_0_N2_1.py:15: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 4 errors in 1 file (checked 1 source file)\n"
    },
    "LONGEST_COMMON_SUBSEQUENCE_WITH_AT_MOST_K_CHANGES_ALLOWED": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_BINARY_STRINGS_K_TIMES_APPEARING_ADJACENT_TWO_SET_BITS": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['n+1', 'k+1', '2']['2']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "[ [ 1 , 1 ] , [ 1 , 1 ] ]",
                "new": "[[[0 for _ in range(2)] for _ in range(k+1)] for _ in range(n+1)]",
                "changetype": "arrshape"
            },
            {
                "type": "add",
                "content": [
                    "j++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "        j=0 ",
                "line": 6,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content",
                    "for_update": "content"
                }
            },
            {
                "type": "del",
                "line": 6,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "        while j<i and j<k+1 :",
                "line": 6,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "            j += 1",
                "line": 11,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_BINARY_STRINGS_K_TIMES_APPEARING_ADJACENT_TWO_SET_BITS.py:9: error: List item 0 has incompatible type \"int\"; expected \"list[int]\"  [list-item]\nresult2/check/transcoder/java2python/python_typed/COUNT_BINARY_STRINGS_K_TIMES_APPEARING_ADJACENT_TWO_SET_BITS.py:9: error: List item 1 has incompatible type \"int\"; expected \"list[int]\"  [list-item]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "MAXIMUM_AREA_RECTANGLE_PICKING_FOUR_SIDES_ARRAY": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "NTH_EVEN_LENGTH_PALINDROME": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_OPERATIONS_MAKE_STRINGAB_FREE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_PRODUCT_SUBSET_ARRAY": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "max_neg Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "int(a[0])",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "del",
                "line": 20,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 20,
                "content": "        prod = prod // max_neg",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        prod = prod // max_neg",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMUM_PRODUCT_SUBSET_ARRAY.py:28: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "ZECKENDORFS_THEOREM_NON_NEIGHBOURING_FIBONACCI_REPRESENTATION": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "INTEGER_POSITIVE_VALUE_POSITIVE_NEGATIVE_VALUE_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SUM_MATRIX_ELEMENT_ABSOLUTE_DIFFERENCE_ROW_COLUMN_NUMBERS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMUM_INCREMENT_K_OPERATIONS_MAKE_ELEMENTS_EQUAL": {
        "change": [
            {
                "type": "del",
                "line": 8,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 8,
                "content": "            res += ( max - arr [ i ] ) // k",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "            res += ( max - arr [ i ] ) // k",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MINIMUM_INCREMENT_K_OPERATIONS_MAKE_ELEMENTS_EQUAL.py:15: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "LONGEST_PREFIX_ALSO_SUFFIX_1": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/LONGEST_PREFIX_ALSO_SUFFIX_1.py:9: error: Name \"len\" is used before definition  [used-before-def]\nresult2/check/transcoder/java2python/python_typed/LONGEST_PREFIX_ALSO_SUFFIX_1.py:14: error: \"int\" not callable  [operator]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "POSSIBLE_FORM_TRIANGLE_ARRAY_VALUES": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SWAP_TWO_NUMBERS_WITHOUT_USING_TEMPORARY_VARIABLE": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SWAP_TWO_NUMBERS_WITHOUT_USING_TEMPORARY_VARIABLE.py:9: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"tuple[slice, int]\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/SWAP_TWO_NUMBERS_WITHOUT_USING_TEMPORARY_VARIABLE.py:9: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/SWAP_TWO_NUMBERS_WITHOUT_USING_TEMPORARY_VARIABLE.py:9: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/SWAP_TWO_NUMBERS_WITHOUT_USING_TEMPORARY_VARIABLE.py:9: note:     def __getitem__(self, slice, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/SWAP_TWO_NUMBERS_WITHOUT_USING_TEMPORARY_VARIABLE.py:10: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"tuple[slice, int]\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/SWAP_TWO_NUMBERS_WITHOUT_USING_TEMPORARY_VARIABLE.py:10: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/SWAP_TWO_NUMBERS_WITHOUT_USING_TEMPORARY_VARIABLE.py:10: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/SWAP_TWO_NUMBERS_WITHOUT_USING_TEMPORARY_VARIABLE.py:10: note:     def __getitem__(self, slice, /) -> list[int]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "ELEMENTS_TO_BE_ADDED_SO_THAT_ALL_ELEMENTS_OF_A_RANGE_ARE_PRESENT_IN_ARRAY_1": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "maxm Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 3,
                "old": "int(min(arr))",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "line": -1,
                "content": "minm Integer . MAX_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 3,
                "old": "int(max(arr))",
                "new": "sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/ELEMENTS_TO_BE_ADDED_SO_THAT_ALL_ELEMENTS_OF_A_RANGE_ARE_PRESENT_IN_ARRAY_1.py:20: error: \"add\" of \"set\" does not return a value (it only ever returns None)  [func-returns-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "MAXIMUM_SUM_IARRI_AMONG_ROTATIONS_GIVEN_ARRAY_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER": {
        "change": [
            {
                "type": "add",
                "content": "count [ c ] > count [ second ] and count [ c ] != count [ first ]",
                "line": -1,
                "changetype": "ifcond"
            },
            {
                "type": "replace",
                "old": "count [ c ] > count [ second ] and count [ c ] != count [ first ]",
                "new": "(count[i]>count[second] and count[i]!=count[first])",
                "line": 10,
                "changetype": "ifcond"
            },
            {
                "type": "add",
                "content": "count [ c ] > count [ first ]",
                "line": -1,
                "changetype": "ifcond"
            },
            {
                "type": "replace",
                "old": "count [ c ] > count [ first ]",
                "new": "(count[i]>count[first])",
                "line": 8,
                "changetype": "ifcond"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:9: error: Name \"NO_OF_CHARS\" is not defined  [name-defined]\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:12: error: No overload variant of \"__setitem__\" of \"list\" matches argument types \"str\", \"Any\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:12: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:12: note:     def __setitem__(self, SupportsIndex, int, /) -> None\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:12: note:     def __setitem__(self, slice, Iterable[int], /) -> None\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:12: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:12: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:12: note:     def __getitem__(self, slice, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:13: error: No overload variant of \"__setitem__\" of \"list\" matches argument types \"str\", \"Any\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:13: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:13: note:     def __setitem__(self, SupportsIndex, int, /) -> None\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:13: note:     def __setitem__(self, slice, Iterable[int], /) -> None\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:13: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"str\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:13: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:13: note:     def __getitem__(self, slice, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:16: error: Name \"NO_OF_CHARS\" is not defined  [name-defined]\nresult2/check/transcoder/java2python/python_typed/C_PROGRAM_FIND_SECOND_FREQUENT_CHARACTER.py:23: error: Incompatible return value type (got \"tuple[str, int, int]\", expected \"str | int\")  [return-value]\nFound 7 errors in 1 file (checked 1 source file)\n"
    },
    "CHECK_IF_A_NUMBER_IS_POWER_OF_ANOTHER_NUMBER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "HORNERS_METHOD_POLYNOMIAL_EVALUATION": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "TRIANGULAR_NUMBERS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "THIRD_LARGEST_ELEMENT_ARRAY_DISTINCT_ELEMENTS_1": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "second Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 5,
                "old": "int(arr[1])",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "line": -1,
                "content": "third Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 5,
                "old": "int(arr[2])",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    print ( \"The third Largest element is \" + third )",
                "changetype": "type_OperatorStr"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/THIRD_LARGEST_ELEMENT_ARRAY_DISTINCT_ELEMENTS_1.py:25: error: Unsupported operand types for + (\"str\" and \"int\")  [operator]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:14: error: Too many values to unpack (4 expected, 5 provided)  [misc]\nresult2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:16: error: Name \"s1\" already defined on line 14  [no-redef]\nresult2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:16: error: Cannot determine type of \"s1\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:17: error: Name \"s2\" already defined on line 14  [no-redef]\nresult2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:17: error: Cannot determine type of \"s2\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:18: error: Name \"s3\" already defined on line 14  [no-redef]\nresult2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:18: error: Cannot determine type of \"s3\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:19: error: Name \"s4\" already defined on line 14  [no-redef]\nresult2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:19: error: Cannot determine type of \"s4\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:20: error: Name \"StringIndexOutOfBoundsException\" is not defined  [name-defined]\nresult2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:22: error: Cannot determine type of \"s1\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:22: error: Cannot determine type of \"s2\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:22: error: Cannot determine type of \"s3\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/CHECK_GIVEN_STRING_CAN_SPLIT_FOUR_DISTINCT_STRINGS.py:22: error: Cannot determine type of \"s4\"  [has-type]\nFound 14 errors in 1 file (checked 1 source file)\n"
    },
    "NUMBER_N_DIGIT_STEPPING_NUMBERS": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['n+1', '10']['n+1']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "[ 0 ] * ( n + 1 )",
                "new": "[[0 for _ in range(10)] for _ in range(n+1)]",
                "changetype": "arrshape"
            },
            {
                "type": "add",
                "content": [
                    "j++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    j=0 ",
                "line": 5,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 5,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while j<10 :",
                "line": 5,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        j += 1",
                "line": 7,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "j++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "        j=0 ",
                "line": 8,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 8,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "        while j<10 :",
                "line": 8,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "            j += 1",
                "line": 15,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "j++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    j=1 ",
                "line": 16,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 16,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while j<10 :",
                "line": 16,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        j += 1",
                "line": 18,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/NUMBER_N_DIGIT_STEPPING_NUMBERS.py:9: error: List item 0 has incompatible type \"int\"; expected \"list[int]\"  [list-item]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "NEXT_POWER_OF_2_2": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "QUICK_WAY_CHECK_CHARACTERS_STRING": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_PAIRS_DIFFERENCE_EQUAL_K": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1": {
        "change": [
            {
                "type": "del",
                "line": 10,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 10,
                "content": "        ans += ( count * ( count - 1 ) ) // 2",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        ans += ( count * ( count - 1 ) ) // 2",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1.py:11: error: \"dict[int, int]\" has no attribute \"has_key\"  [attr-defined]\nresult2/check/transcoder/java2python/python_typed/COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY_1.py:17: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "FIND_POSITION_GIVEN_NUMBER_AMONG_NUMBERS_MADE_4_7": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "REMOVE_CONSECUTIVE_DUPLICATES_STRING": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/REMOVE_CONSECUTIVE_DUPLICATES_STRING.py:17: error: Generator has incompatible item type \"list[str | int]\"; expected \"bool\"  [misc]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "FIND_NUMBER_TIMES_STRING_OCCURS_GIVEN_STRING_1": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['m+1', 'n+1']['Unknown']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "[ 0 ] * ( m + 1 ) * ( n + 1 )",
                "new": "[[0 for _ in range(n+1)] for _ in range(m+1)]",
                "changetype": "arrshape"
            },
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=0 ",
                "line": 5,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 5,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<n+1 :",
                "line": 5,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 7,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=0 ",
                "line": 7,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 7,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<m+1 :",
                "line": 7,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 9,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "j++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "        j=1 ",
                "line": 10,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 10,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "        while j<n+1 :",
                "line": 10,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "            j += 1",
                "line": 15,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=1 ",
                "line": 9,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 9,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<m+1 :",
                "line": 9,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 15,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_NUMBER_TIMES_STRING_OCCURS_GIVEN_STRING_1.py:11: error: Incompatible types in assignment (expression has type \"list[int]\", variable has type \"list[list[int]]\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_2": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "jumps [ i ] Integer . MAX_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 7,
                "old": "int(arr[i])",
                "new": "sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "line": -1,
                "content": "min Integer . MAX_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 11,
                "old": "int(arr[i+1])",
                "new": "sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "content": " min != Integer . MAX_VALUE ",
                "line": -1,
                "changetype": "maxmin1"
            },
            {
                "type": "add",
                "content": "            if min!=sys.maxsize:",
                "line": 15,
                "changetype": "maxmin1"
            },
            {
                "type": "del",
                "line": 15,
                "changetype": "maxmin1"
            },
            {
                "type": "add",
                "content": [
                    "j++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "            j=i+1 ",
                "line": 12,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 12,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "            while j<n and j<=arr[i]+i :",
                "line": 12,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "                j += 1",
                "line": 15,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_2.py:10: error: Incompatible types in assignment (expression has type \"None\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_2.py:19: error: Cannot determine type of \"j\"  [has-type]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "MAXIMUM_WEIGHT_PATH_ENDING_ELEMENT_LAST_ROW_MATRIX": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['N', 'N']['N']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "[ 0 ] * N",
                "new": "[[0 for _ in range(N)] for _ in range(N)]",
                "changetype": "arrshape"
            },
            {
                "type": "add",
                "content": [
                    "j++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "        j=1 ",
                "line": 7,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 7,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "        while j<i+1 and j<N :",
                "line": 7,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "            j += 1",
                "line": 9,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMUM_WEIGHT_PATH_ENDING_ELEMENT_LAST_ROW_MATRIX.py:9: error: List item 0 has incompatible type \"int\"; expected \"list[int]\"  [list-item]\nresult2/check/transcoder/java2python/python_typed/MAXIMUM_WEIGHT_PATH_ENDING_ELEMENT_LAST_ROW_MATRIX.py:14: error: Cannot determine type of \"j\"  [has-type]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "SUM_BINOMIAL_COEFFICIENTS_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DYNAMIC_PROGRAMMING_SET_17_PALINDROME_PARTITIONING": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "C [ i ] [ j ] Integer . MAX_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 19,
                "old": "int(P[i][j])",
                "new": "sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "line": -1,
                "content": "['n', 'n']['n']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 3,
                "old": "[ [ ] for i in range ( n ) ]",
                "new": "[[0 for _ in range(n)] for _ in range(n)]",
                "changetype": "arrshape"
            },
            {
                "type": "add",
                "line": -1,
                "content": "['n', 'n']['n']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "[ [ ] for i in range ( n ) ]",
                "new": "[[0 for _ in range(n)] for _ in range(n)]",
                "changetype": "arrshape"
            },
            {
                "type": "add",
                "content": [
                    "k++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "                k=i ",
                "line": 20,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 20,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "                while k<j :",
                "line": 20,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "                    k += 1",
                "line": 22,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MARKOV_MATRIX": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMUM_INSERTIONS_SORT_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SUM_BINOMIAL_COEFFICIENTS": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "NUMBER_SUBSTRINGS_STRING": {
        "change": [
            {
                "type": "del",
                "line": 3,
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": 3,
                "content": "    return n * ( n + 1 ) // 2",
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return n * ( n + 1 ) // 2",
                "changetype": "type_RetFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/NUMBER_SUBSTRINGS_STRING.py:10: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "COUNT_CHARACTERS_STRING_DISTANCE_ENGLISH_ALPHABETS": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_CHARACTERS_STRING_DISTANCE_ENGLISH_ALPHABETS.py:13: error: Unsupported left operand type for - (\"str\")  [operator]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SEARCH_INSERT_AND_DELETE_IN_A_SORTED_ARRAY_1": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SEARCH_INSERT_AND_DELETE_IN_A_SORTED_ARRAY_1.py:15: error: Incompatible return value type (got \"tuple[int, list[int]]\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "MULTIPLY_AN_INTEGER_WITH_3_5": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CONSTRUCT_LEXICOGRAPHICALLY_SMALLEST_PALINDROME": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/CONSTRUCT_LEXICOGRAPHICALLY_SMALLEST_PALINDROME.py:26: error: Incompatible return value type (got \"list[str | int]\", expected \"str\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "BINARY_SEARCH": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_POSSIBLE_DECODINGS_GIVEN_DIGIT_SEQUENCE_1": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_POSSIBLE_DECODINGS_GIVEN_DIGIT_SEQUENCE_1.py:14: error: Unsupported operand types for > (\"int\" and \"str\")  [operator]\nresult2/check/transcoder/java2python/python_typed/COUNT_POSSIBLE_DECODINGS_GIVEN_DIGIT_SEQUENCE_1.py:14: note: Left operand is of type \"str | int\"\nresult2/check/transcoder/java2python/python_typed/COUNT_POSSIBLE_DECODINGS_GIVEN_DIGIT_SEQUENCE_1.py:16: error: Unsupported operand types for < (\"int\" and \"str\")  [operator]\nresult2/check/transcoder/java2python/python_typed/COUNT_POSSIBLE_DECODINGS_GIVEN_DIGIT_SEQUENCE_1.py:16: note: Left operand is of type \"str | int\"\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "FIND_LARGEST_PRIME_FACTOR_NUMBER": {
        "change": [
            {
                "type": "del",
                "line": 6,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 6,
                "content": "    for i in range( 3 ,int ( math.sqrt ( n ) ), 2 ):",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    for i in range( 3 ,int ( math.sqrt ( n ) ), 2 ):",
                "changetype": "type_CallFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_LARGEST_PRIME_FACTOR_NUMBER.py:13: error: No overload variant of \"range\" matches argument types \"int\", \"float\", \"int\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/FIND_LARGEST_PRIME_FACTOR_NUMBER.py:13: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/FIND_LARGEST_PRIME_FACTOR_NUMBER.py:13: note:     def range(SupportsIndex, /) -> range\nresult2/check/transcoder/java2python/python_typed/FIND_LARGEST_PRIME_FACTOR_NUMBER.py:13: note:     def range(SupportsIndex, SupportsIndex, SupportsIndex = ..., /) -> range\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SUM_K_TH_GROUP_ODD_POSITIVE_NUMBERS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "K_TH_MISSING_ELEMENT_INCREASING_SEQUENCE_NOT_PRESENT_GIVEN_SEQUENCE": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/K_TH_MISSING_ELEMENT_INCREASING_SEQUENCE_NOT_PRESENT_GIVEN_SEQUENCE.py:14: error: Argument 1 to \"intersection\" of \"set\" has incompatible type \"int\"; expected \"Iterable[Any]\"  [arg-type]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SORT_EVEN_PLACED_ELEMENTS_INCREASING_ODD_PLACED_DECREASING_ORDER": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "    return arr",
                "changetype": "type_noret"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SORT_EVEN_PLACED_ELEMENTS_INCREASING_ODD_PLACED_DECREASING_ORDER.py:23: error: No return value expected  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "FIND_PAIR_WITH_GREATEST_PRODUCT_IN_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SMALLEST_POWER_OF_2_GREATER_THAN_OR_EQUAL_TO_N_2": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_STRINGS_CAN_FORMED_USING_B_C_GIVEN_CONSTRAINTS_1": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": " 1 + ( n ** 2 ) + ( n * ( ( n ** 2 ) - 1 ) / 2 )",
                "changetype": "longcomp"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": " 1 + ( n ** 2 ) + ( n * ( ( n ** 2 ) - 1 ) / 2 )",
                "new": " int(1+(n*2)+(n*((n*n)-1)//2))",
                "changetype": "longcomp"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_STRINGS_CAN_FORMED_USING_B_C_GIVEN_CONSTRAINTS_1.py:9: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "FIND_PAIRS_GIVEN_SUM_ELEMENTS_PAIR_DIFFERENT_ROWS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SUM_SERIES_23_45_67_89_UPTO_N_TERMS": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "HYPERCUBE_GRAPH": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "NUMBER_DIGITS_PRODUCT_TWO_NUMBERS_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "BREAK_NUMBER_THREE_PARTS": {
        "change": [
            {
                "type": "add",
                "content": [
                    "k++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "            k=0 ",
                "line": 5,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 5,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "            while k<n+1 :",
                "line": 5,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "                k += 1",
                "line": 8,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "j++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "        j=0 ",
                "line": 4,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 4,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "        while j<n+1 :",
                "line": 4,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "            j += 1",
                "line": 8,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=0 ",
                "line": 3,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 3,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<n+1 :",
                "line": 3,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 8,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CHECK_TWO_GIVEN_CIRCLES_TOUCH_INTERSECT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_AREA_SQUARE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_STRINGS_WITH_CONSECUTIVE_1S": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "FIND_THE_NUMBER_OCCURRING_ODD_NUMBER_OF_TIMES": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "GIVEN_A_SORTED_AND_ROTATED_ARRAY_FIND_IF_THERE_IS_A_PAIR_WITH_A_GIVEN_SUM_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "K_TH_LARGEST_SUM_CONTIGUOUS_SUBARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_COUNT_OCCURRENCE_GIVEN_CHARACTER_STRING": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_SUBARRAY_SUM_USING_PREFIX_SUM": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "res Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 3,
                "old": "int('-1')",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "line": -1,
                "content": "['n']['1']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "[ arr [ 0 ] ]",
                "new": "[0 for _ in range(n)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_WHETHER_A_GIVEN_NUMBER_IS_A_POWER_OF_4_OR_NOT_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_ONE_EXTRA_CHARACTER_STRING_1": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "        res ^= strA [ i ]",
                "changetype": "type_OperatorStr"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        res ^= strB [ i ]",
                "changetype": "type_OperatorStr"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_ONE_EXTRA_CHARACTER_STRING_1.py:12: error: Unsupported operand types for ^ (\"int\" and \"str\")  [operator]\nresult2/check/transcoder/java2python/python_typed/FIND_ONE_EXTRA_CHARACTER_STRING_1.py:14: error: Unsupported operand types for ^ (\"int\" and \"str\")  [operator]\nresult2/check/transcoder/java2python/python_typed/FIND_ONE_EXTRA_CHARACTER_STRING_1.py:15: error: Incompatible return value type (got \"tuple[str, int]\", expected \"str | int\")  [return-value]\nFound 3 errors in 1 file (checked 1 source file)\n"
    },
    "ANALYSIS_OF_ALGORITHMS_SET_2_ASYMPTOTIC_ANALYSIS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_DISTANCE_TWO_OCCURRENCES_ELEMENT_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS.py:9: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS.py:9: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nresult2/check/transcoder/java2python/python_typed/COUNT_WORDS_APPEAR_EXACTLY_TWO_TIMES_ARRAY_WORDS.py:11: error: \"dict[str?, int]\" has no attribute \"has_key\"  [attr-defined]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "COUNT_POSSIBLE_PATHS_TOP_LEFT_BOTTOM_RIGHT_NXM_MATRIX_2": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['n']['n', 'm']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "np.zeros ( ( n , m ) )",
                "new": "[0 for _ in range(n)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_POSSIBLE_PATHS_TOP_LEFT_BOTTOM_RIGHT_NXM_MATRIX_2.py:9: error: Incompatible types in assignment (expression has type \"ndarray[Any, dtype[floating[_64Bit]]]\", variable has type \"list[int]\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "DYNAMIC_PROGRAMMING_SET_36_CUT_A_ROPE_TO_MAXIMIZE_PRODUCT_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_THE_ELEMENT_THAT_APPEARS_ONCE": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_THE_ELEMENT_THAT_APPEARS_ONCE.py:18: error: Incompatible return value type (got \"tuple[int, int]\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "MAXIMUM_TRIPLET_SUM_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SMALLEST_DIFFERENCE_PAIR_VALUES_TWO_UNSORTED_ARRAYS": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SMALLEST_DIFFERENCE_PAIR_VALUES_TWO_UNSORTED_ARRAYS.py:15: error: Name \"sys\" is not defined  [name-defined]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "CHECK_SUMS_TH_ROW_TH_COLUMN_MATRIX": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "ADD_1_TO_A_GIVEN_NUMBER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "STEINS_ALGORITHM_FOR_FINDING_GCD_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_CHECK_ARRAY_SORTED_NOT_ITERATIVE_RECURSIVE_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "HARDY_RAMANUJAN_THEOREM": {
        "change": [
            {
                "type": "del",
                "line": 7,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 7,
                "content": "    for i in range( 3 ,int ( math.sqrt ( n ) ), 2 ):",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    for i in range( 3 ,int ( math.sqrt ( n ) ), 2 ):",
                "changetype": "type_CallFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/HARDY_RAMANUJAN_THEOREM.py:13: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/HARDY_RAMANUJAN_THEOREM.py:14: error: No overload variant of \"range\" matches argument types \"int\", \"float\", \"int\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/HARDY_RAMANUJAN_THEOREM.py:14: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/HARDY_RAMANUJAN_THEOREM.py:14: note:     def range(SupportsIndex, /) -> range\nresult2/check/transcoder/java2python/python_typed/HARDY_RAMANUJAN_THEOREM.py:14: note:     def range(SupportsIndex, SupportsIndex, SupportsIndex = ..., /) -> range\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "CHECK_VALID_SEQUENCE_DIVISIBLE_M_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SUM_PAIRWISE_PRODUCTS_1": {
        "change": [
            {
                "type": "del",
                "line": 2,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 2,
                "content": "    multiTerms = n * ( n + 1 ) // 2",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    multiTerms = n * ( n + 1 ) // 2",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SUM_PAIRWISE_PRODUCTS_1.py:9: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "NUMBER_NON_NEGATIVE_INTEGRAL_SOLUTIONS_B_C_N": {
        "change": [
            {
                "type": "add",
                "content": [
                    "k++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "            k=0 ",
                "line": 5,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 5,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "            while k<(n-i-j)+1 :",
                "line": 5,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "                k += 1",
                "line": 8,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "j++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "        j=0 ",
                "line": 4,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 4,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "        while j<n-i+1 :",
                "line": 4,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "            j += 1",
                "line": 8,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=0 ",
                "line": 3,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 3,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<n+1 :",
                "line": 3,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 8,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PAPER_CUT_MINIMUM_NUMBER_SQUARES": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PAPER_CUT_MINIMUM_NUMBER_SQUARES.py:12: error: Name \"swap\" is not defined  [name-defined]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT.py:9: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT.py:9: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nresult2/check/transcoder/java2python/python_typed/FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT.py:9: error: Cannot resolve name \"Stack\" (possible cyclic definition)  [misc]\nresult2/check/transcoder/java2python/python_typed/FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT.py:9: note: Recursive types are not allowed at function scope\nresult2/check/transcoder/java2python/python_typed/FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT.py:10: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT.py:10: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nresult2/check/transcoder/java2python/python_typed/FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT.py:10: error: Incompatible types in assignment (expression has type \"list[str]\", variable has type \"list[str? | int]\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT.py:10: note: \"List\" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance\nresult2/check/transcoder/java2python/python_typed/FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT.py:10: note: Consider using \"Sequence\" instead, which is covariant\nresult2/check/transcoder/java2python/python_typed/FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT.py:13: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT.py:13: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nresult2/check/transcoder/java2python/python_typed/FIND_EXPRESSION_DUPLICATE_PARENTHESIS_NOT.py:23: error: \"list[str?]\" has no attribute \"push\"  [attr-defined]\nFound 6 errors in 1 file (checked 1 source file)\n"
    },
    "COUNT_WAYS_DIVIDE_CIRCLE_USING_N_NON_INTERSECTING_CHORDS": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['n+1']['2']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 3,
                "old": "[ 1 , 1 ]",
                "new": "[0 for _ in range(n+1)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PYTHON_PROGRAM_FIND_PERIMETER_CIRCUMFERENCE_SQUARE_RECTANGLE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "C_PROGRAM_FACTORIAL_NUMBER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "STRING_CONTAINING_FIRST_LETTER_EVERY_WORD_GIVEN_STRING_SPACES": {
        "change": [
            {
                "type": "add",
                "content": "c == ' '",
                "line": -1,
                "changetype": "ifcond"
            },
            {
                "type": "replace",
                "old": "c == ' '",
                "new": "(str[i]=='')",
                "line": 5,
                "changetype": "ifcond"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/STRING_CONTAINING_FIRST_LETTER_EVERY_WORD_GIVEN_STRING_SPACES.py:9: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/STRING_CONTAINING_FIRST_LETTER_EVERY_WORD_GIVEN_STRING_SPACES.py:9: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nresult2/check/transcoder/java2python/python_typed/STRING_CONTAINING_FIRST_LETTER_EVERY_WORD_GIVEN_STRING_SPACES.py:15: error: Unsupported left operand type for + (str?)  [operator]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "COUNT_PAIRS_WHOSE_PRODUCTS_EXIST_IN_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CHECK_WHETHER_TRIANGLE_VALID_NOT_SIDES_GIVEN": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_THE_FIRST_MISSING_NUMBER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_MINIMUM_ELEMENT_IN_A_SORTED_AND_ROTATED_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_SUM_PAIRS_SPECIFIC_DIFFERENCE_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "UNIQUE_CELLS_BINARY_MATRIX": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "TEMPLE_OFFERINGS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SEARCH_AN_ELEMENT_IN_A_SORTED_AND_PIVOTED_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_MAXIMUM_PRODUCT_OF_A_TRIPLET_IN_ARRAY": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "max_product Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "int('-1')",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CEILING_IN_A_SORTED_ARRAY_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "LONGEST_REPEATED_SUBSEQUENCE_1": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "GCD_ELEMENTS_GIVEN_RANGE": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/GCD_ELEMENTS_GIVEN_RANGE.py:9: error: Incompatible return value type (got \"tuple[int, int]\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "FIND_MAXIMUM_AVERAGE_SUBARRAY_OF_K_LENGTH_1": {
        "change": [
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=1 ",
                "line": 5,
                "changetype": "forinit",
                "errtype": {
                    "for_init": "content"
                }
            },
            {
                "type": "del",
                "line": 5,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<k :",
                "line": 5,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 7,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_MIRROR_IMAGE_POINT_2_D_PLANE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DOUBLE_FACTORIAL_1": {
        "change": [
            {
                "type": "add",
                "content": [
                    "i=i-2"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=n ",
                "line": 3,
                "changetype": "forinit",
                "errtype": {
                    "for_update": "content"
                }
            },
            {
                "type": "del",
                "line": 3,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i>-1 :",
                "line": 3,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i=i-2",
                "line": 8,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_PAIRS_WHOSE_PRODUCTS_EXIST_IN_ARRAY_1": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_PAIRS_WHOSE_PRODUCTS_EXIST_IN_ARRAY_1.py:16: error: Argument 1 to \"intersection\" of \"set\" has incompatible type \"int\"; expected \"Iterable[Any]\"  [arg-type]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SUM_NODES_K_TH_LEVEL_TREE_REPRESENTED_STRING": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SUM_NODES_K_TH_LEVEL_TREE_REPRESENTED_STRING.py:19: error: Unsupported left operand type for - (\"str\")  [operator]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "POINT_CLIPPING_ALGORITHM_COMPUTER_GRAPHICS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SORT_ARRAY_WAVE_FORM_2_1": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SORT_ARRAY_WAVE_FORM_2_1.py:11: error: Name \"swap\" is not defined  [name-defined]\nresult2/check/transcoder/java2python/python_typed/SORT_ARRAY_WAVE_FORM_2_1.py:13: error: Name \"swap\" is not defined  [name-defined]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "COUNT_NATURAL_NUMBERS_WHOSE_PERMUTATION_GREATER_NUMBER": {
        "change": [
            {
                "type": "add",
                "content": [
                    "j++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "            j=tp%10 ",
                "line": 11,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 11,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "            while j<10 :",
                "line": 11,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "                j += 1",
                "line": 16,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=1 ",
                "line": 3,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 3,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<10 :",
                "line": 3,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 16,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_NATURAL_NUMBERS_WHOSE_PERMUTATION_GREATER_NUMBER.py:11: error: Name \"Stack\" is not defined  [name-defined]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SUM_TWO_LARGE_NUMBERS": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "        str += chr ( sum % 10 + '0' )",
                "changetype": "type_OperatorStr"
            },
            {
                "type": "del",
                "line": 13,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 13,
                "content": "        carry = sum // 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        carry = sum // 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        str += chr ( sum % 10 + '0' )",
                "changetype": "type_OperatorStr"
            },
            {
                "type": "del",
                "line": 17,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 17,
                "content": "        carry = sum // 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        carry = sum // 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        str += chr ( carry + '0' )",
                "changetype": "type_OperatorStr"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SUM_TWO_LARGE_NUMBERS.py:13: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/SUM_TWO_LARGE_NUMBERS.py:13: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nresult2/check/transcoder/java2python/python_typed/SUM_TWO_LARGE_NUMBERS.py:16: error: Value of type str? is not indexable  [index]\nresult2/check/transcoder/java2python/python_typed/SUM_TWO_LARGE_NUMBERS.py:17: error: Value of type str? is not indexable  [index]\nresult2/check/transcoder/java2python/python_typed/SUM_TWO_LARGE_NUMBERS.py:21: error: Unsupported left operand type for + (str?)  [operator]\nresult2/check/transcoder/java2python/python_typed/SUM_TWO_LARGE_NUMBERS.py:21: error: Unsupported operand types for + (\"int\" and \"str\")  [operator]\nresult2/check/transcoder/java2python/python_typed/SUM_TWO_LARGE_NUMBERS.py:22: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/SUM_TWO_LARGE_NUMBERS.py:25: error: Unsupported left operand type for + (str?)  [operator]\nresult2/check/transcoder/java2python/python_typed/SUM_TWO_LARGE_NUMBERS.py:25: error: Unsupported operand types for + (\"int\" and \"str\")  [operator]\nresult2/check/transcoder/java2python/python_typed/SUM_TWO_LARGE_NUMBERS.py:26: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/SUM_TWO_LARGE_NUMBERS.py:28: error: Unsupported left operand type for + (str?)  [operator]\nresult2/check/transcoder/java2python/python_typed/SUM_TWO_LARGE_NUMBERS.py:28: error: Unsupported operand types for + (\"int\" and \"str\")  [operator]\nFound 11 errors in 1 file (checked 1 source file)\n"
    },
    "FIND_SUM_UNIQUE_SUB_ARRAY_SUM_GIVEN_ARRAY": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_SUM_UNIQUE_SUB_ARRAY_SUM_GIVEN_ARRAY.py:15: error: \"dict[int, int]\" has no attribute \"has_key\"  [attr-defined]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "MINIMUM_LENGTH_SUBARRAY_SUM_GREATER_GIVEN_VALUE_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DECIMAL_BINARY_CONVERSION_WITHOUT_USING_ARITHMETIC_OPERATORS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_A_TRIPLET_THAT_SUM_TO_A_GIVEN_VALUE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_SUM_ODD_FACTORS_NUMBER": {
        "change": [
            {
                "type": "del",
                "line": 5,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 5,
                "content": "    for i in range( 3 ,int ( math.sqrt ( n ) )):",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    for i in range( 3 ,int ( math.sqrt ( n ) )):",
                "changetype": "type_CallFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_SUM_ODD_FACTORS_NUMBER.py:11: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/FIND_SUM_ODD_FACTORS_NUMBER.py:12: error: No overload variant of \"range\" matches argument types \"int\", \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/FIND_SUM_ODD_FACTORS_NUMBER.py:12: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/FIND_SUM_ODD_FACTORS_NUMBER.py:12: note:     def range(SupportsIndex, /) -> range\nresult2/check/transcoder/java2python/python_typed/FIND_SUM_ODD_FACTORS_NUMBER.py:12: note:     def range(SupportsIndex, SupportsIndex, SupportsIndex = ..., /) -> range\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "MAXIMUM_NUMBER_OF_SQUARES_THAT_CAN_BE_FIT_IN_A_RIGHT_ANGLE_ISOSCELES_TRIANGLE": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": " ( b / m - 1 ) ** 2 / 2",
                "changetype": "longcomp"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": " ( b / m - 1 ) ** 2 / 2",
                "new": " int((b//m-1)*(b//m)/2)",
                "changetype": "longcomp"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMUM_NUMBER_OF_SQUARES_THAT_CAN_BE_FIT_IN_A_RIGHT_ANGLE_ISOSCELES_TRIANGLE.py:9: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SHUFFLE_A_GIVEN_ARRAY": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SHUFFLE_A_GIVEN_ARRAY.py:9: error: Name \"random\" is not defined  [name-defined]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "GIVEN_LARGE_NUMBER_CHECK_SUBSEQUENCE_DIGITS_DIVISIBLE_8": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CHECK_IF_ALL_THE_ELEMENTS_CAN_BE_MADE_OF_SAME_PARITY_BY_INVERTING_ADJACENT_ELEMENTS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_CONSECUTIVE_NUMBERS_PRESENT_ARRAY": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMUM_CONSECUTIVE_NUMBERS_PRESENT_ARRAY.py:14: error: Argument 1 to \"intersection\" of \"set\" has incompatible type \"int\"; expected \"Iterable[Any]\"  [arg-type]\nresult2/check/transcoder/java2python/python_typed/MAXIMUM_CONSECUTIVE_NUMBERS_PRESENT_ARRAY.py:16: error: Argument 1 to \"intersection\" of \"set\" has incompatible type \"int\"; expected \"Iterable[Any]\"  [arg-type]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "MAXIMUM_DIFFERENCE_SUM_ELEMENTS_TWO_ROWS_MATRIX": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SEGREGATE_EVEN_ODD_NUMBERS_SET_3": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CHECK_WHETHER_GIVEN_DEGREES_VERTICES_REPRESENT_GRAPH_TREE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SUM_SERIES_12_32_52_2N_12": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "sum + ( 2 * i - 1 ) ** ( 2 * i - 1 )",
                "changetype": "longcomp"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "sum + ( 2 * i - 1 ) ** ( 2 * i - 1 )",
                "new": " sum+(2*i-1)*(2*i-1)",
                "changetype": "longcomp"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_PRODUCT_INCREASING_SUBSEQUENCE": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "max Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 3,
                "old": "int(arr[i])",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMUM_PRODUCT_INCREASING_SUBSEQUENCE.py:10: error: Cannot determine type of \"i\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/MAXIMUM_PRODUCT_INCREASING_SUBSEQUENCE.py:10: error: Name \"i\" is used before definition  [used-before-def]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "FIND_SUBARRAY_WITH_GIVEN_SUM_1": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_SUBARRAY_WITH_GIVEN_SUM_1.py:9: error: Too many values to unpack (2 expected, 3 provided)  [misc]\nresult2/check/transcoder/java2python/python_typed/FIND_SUBARRAY_WITH_GIVEN_SUM_1.py:11: error: Cannot determine type of \"curr_sum\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_SUBARRAY_WITH_GIVEN_SUM_1.py:11: error: Cannot determine type of \"start\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_SUBARRAY_WITH_GIVEN_SUM_1.py:12: error: Name \"curr_sum\" already defined on line 9  [no-redef]\nresult2/check/transcoder/java2python/python_typed/FIND_SUBARRAY_WITH_GIVEN_SUM_1.py:12: error: Cannot determine type of \"curr_sum\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_SUBARRAY_WITH_GIVEN_SUM_1.py:12: error: Cannot determine type of \"start\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_SUBARRAY_WITH_GIVEN_SUM_1.py:13: error: Cannot determine type of \"start\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_SUBARRAY_WITH_GIVEN_SUM_1.py:14: error: Cannot determine type of \"curr_sum\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_SUBARRAY_WITH_GIVEN_SUM_1.py:19: error: Cannot determine type of \"curr_sum\"  [has-type]\nFound 9 errors in 1 file (checked 1 source file)\n"
    },
    "NUMBER_SUBSEQUENCES_AB_STRING_REPEATED_K_TIMES": {
        "change": [
            {
                "type": "del",
                "line": 10,
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": 10,
                "content": "    return C * K + ( K * ( K - 1 ) // 2 ) * c1 * c2",
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return C * K + ( K * ( K - 1 ) // 2 ) * c1 * c2",
                "changetype": "type_RetFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/NUMBER_SUBSEQUENCES_AB_STRING_REPEATED_K_TIMES.py:19: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "CHECK_LARGE_NUMBER_DIVISIBLE_13_NOT": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/CHECK_LARGE_NUMBER_DIVISIBLE_13_NOT.py:22: error: Unsupported left operand type for - (\"str\")  [operator]\nresult2/check/transcoder/java2python/python_typed/CHECK_LARGE_NUMBER_DIVISIBLE_13_NOT.py:23: error: Unsupported left operand type for - (\"str\")  [operator]\nresult2/check/transcoder/java2python/python_typed/CHECK_LARGE_NUMBER_DIVISIBLE_13_NOT.py:24: error: Unsupported left operand type for - (\"str\")  [operator]\nFound 3 errors in 1 file (checked 1 source file)\n"
    },
    "CALCULATE_ANGLE_HOUR_HAND_MINUTE_HAND": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "LEXICOGRAPHICALLY_SMALLEST_ARRAY_K_CONSECUTIVE_SWAPS": {
        "change": [
            {
                "type": "add",
                "content": [
                    "j--"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "        j=pos ",
                "line": 10,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content",
                    "for_update": "content"
                }
            },
            {
                "type": "del",
                "line": 10,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "        while j>i :",
                "line": 10,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "            j -= 1",
                "line": 14,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_SMALLEST_ARRAY_K_CONSECUTIVE_SWAPS.py:16: error: Incompatible types in assignment (expression has type \"None\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "MINIMUM_XOR_VALUE_PAIR_1": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "minXor Integer . MAX_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "np.inf",
                "new": "sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MINIMUM_XOR_VALUE_PAIR_1.py:11: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "K_TH_DIGIT_RAISED_POWER_B": {
        "change": [
            {
                "type": "del",
                "line": 9,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 9,
                "content": "        p = p // 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        p = p // 10",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/K_TH_DIGIT_RAISED_POWER_B.py:8: error: Missing return statement  [return]\nresult2/check/transcoder/java2python/python_typed/K_TH_DIGIT_RAISED_POWER_B.py:16: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "FIND_THE_MAXIMUM_ELEMENT_IN_AN_ARRAY_WHICH_IS_FIRST_INCREASING_AND_THEN_DECREASING": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_CENSOR_WORD_ASTERISKS_SENTENCE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CHANGE_BITS_CAN_MADE_ONE_FLIP": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DISTRIBUTING_M_ITEMS_CIRCLE_SIZE_N_STARTING_K_TH_POSITION": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_REVERSE_STRING_ITERATIVE_RECURSIVE": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PROGRAM_REVERSE_STRING_ITERATIVE_RECURSIVE.py:9: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/PROGRAM_REVERSE_STRING_ITERATIVE_RECURSIVE.py:9: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nresult2/check/transcoder/java2python/python_typed/PROGRAM_REVERSE_STRING_ITERATIVE_RECURSIVE.py:9: error: Name \"Stack\" is not defined  [name-defined]\nresult2/check/transcoder/java2python/python_typed/PROGRAM_REVERSE_STRING_ITERATIVE_RECURSIVE.py:11: error: \"list[str?]\" has no attribute \"push\"  [attr-defined]\nresult2/check/transcoder/java2python/python_typed/PROGRAM_REVERSE_STRING_ITERATIVE_RECURSIVE.py:14: error: \"list[str?]\" has no attribute \"push\"  [attr-defined]\nresult2/check/transcoder/java2python/python_typed/PROGRAM_REVERSE_STRING_ITERATIVE_RECURSIVE.py:15: error: Incompatible return value type (got \"list[str | int]\", expected \"str\")  [return-value]\nFound 5 errors in 1 file (checked 1 source file)\n"
    },
    "SORT_ARRAY_CONTAIN_1_N_VALUES": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SQUARES_OF_MATRIX_DIAGONAL_ELEMENTS": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "                print ( mat [ i ] [ j ] * mat [ i ] [ j ] + \" \" )",
                "changetype": "type_OperatorStr"
            },
            {
                "type": "add",
                "line": -1,
                "content": "                print ( mat [ i ] [ j ] * mat [ i ] [ j ] + \" \" )",
                "changetype": "type_OperatorStr"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SQUARES_OF_MATRIX_DIAGONAL_ELEMENTS.py:13: error: Unsupported operand types for + (\"int\" and \"str\")  [operator]\nresult2/check/transcoder/java2python/python_typed/SQUARES_OF_MATRIX_DIAGONAL_ELEMENTS.py:19: error: Unsupported operand types for + (\"int\" and \"str\")  [operator]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "SEARCHING_ARRAY_ADJACENT_DIFFER_K": {
        "change": [
            {
                "type": "del",
                "line": 6,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 6,
                "content": "        i = i + max ( 1 , abs ( arr [ i ] - x ) // k )",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        i = i + max ( 1 , abs ( arr [ i ] - x ) // k )",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SEARCHING_ARRAY_ADJACENT_DIFFER_K.py:13: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "DETECT_IF_TWO_INTEGERS_HAVE_OPPOSITE_SIGNS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PIZZA_CUT_PROBLEM_CIRCLE_DIVISION_LINES": {
        "change": [
            {
                "type": "del",
                "line": 2,
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": 2,
                "content": "    return 1 + n * ( n + 1 ) // 2",
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return 1 + n * ( n + 1 ) // 2",
                "changetype": "type_RetFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PIZZA_CUT_PROBLEM_CIRCLE_DIVISION_LINES.py:9: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "FIND_TRIPLETS_ARRAY_WHOSE_SUM_EQUAL_ZERO_1": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_TRIPLETS_ARRAY_WHOSE_SUM_EQUAL_ZERO_1.py:14: error: Argument 1 to \"issubset\" of \"set\" has incompatible type \"int\"; expected \"Iterable[Any]\"  [arg-type]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "CHECK_WHETHER_GIVEN_NUMBER_EVEN_ODD": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "TOTAL_NUMBER_OF_NON_DECREASING_NUMBERS_WITH_N_DIGITS_1": {
        "change": [
            {
                "type": "del",
                "line": 6,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 6,
                "content": "        count //= i",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        count //= i",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/TOTAL_NUMBER_OF_NON_DECREASING_NUMBERS_WITH_N_DIGITS_1.py:13: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "COUNT_EVEN_LENGTH_BINARY_SEQUENCES_WITH_SAME_SUM_OF_FIRST_AND_SECOND_HALF_BITS_1": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "( nCr * ( n + 1 - r ) ) / r",
                "changetype": "longcomp"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "( nCr * ( n + 1 - r ) ) / r",
                "new": " (nCr*(n+1-r))//r",
                "changetype": "longcomp"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_EVEN_LENGTH_BINARY_SEQUENCES_WITH_SAME_SUM_OF_FIRST_AND_SECOND_HALF_BITS_1.py:12: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "PRIMALITY_TEST_SET_1_INTRODUCTION_AND_SCHOOL_METHOD_1": {
        "change": [
            {
                "type": "add",
                "content": [
                    "i=i+6"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=5 ",
                "line": 8,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 8,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i*i<n+1 :",
                "line": 8,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i=i+6",
                "line": 11,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PRIMALITY_TEST_SET_1_INTRODUCTION_AND_SCHOOL_METHOD_1.py:15: error: Cannot determine type of \"i\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/PRIMALITY_TEST_SET_1_INTRODUCTION_AND_SCHOOL_METHOD_1.py:15: error: Name \"i\" is used before definition  [used-before-def]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "LEXICOGRAPHICALLY_NEXT_STRING": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES": {
        "change": [
            {
                "type": "del",
                "line": 5,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 5,
                "content": "            DP [ i ] = DP [ i // 2 ]",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "            DP [ i ] = DP [ i // 2 ]",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "del",
                "line": 7,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 7,
                "content": "            DP [ i ] = DP [ ( i - 1 ) // 2 ] + DP [ ( i + 1 ) // 2 ]",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "            DP [ i ] = DP [ ( i - 1 ) // 2 ] + DP [ ( i + 1 ) // 2 ]",
                "changetype": "type_CallFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES.py:12: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES.py:12: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES.py:12: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES.py:12: note:     def __getitem__(self, slice, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES.py:14: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES.py:14: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES.py:14: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/FIND_N_TH_ELEMENT_FROM_STERNS_DIATOMIC_SERIES.py:14: note:     def __getitem__(self, slice, /) -> list[int]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "COUNT_DISTINCT_NON_NEGATIVE_PAIRS_X_Y_SATISFY_INEQUALITY_XX_YY_N_2": {
        "change": [
            {
                "type": "add",
                "content": [
                    "y++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "        y=0 ",
                "line": 4,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 4,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "        while x*x+y*y<n :",
                "line": 4,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "            y += 1",
                "line": 6,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "x++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    x=0 ",
                "line": 3,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 3,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while x*x<n :",
                "line": 3,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        x += 1",
                "line": 6,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_DISTINCT_NON_NEGATIVE_PAIRS_X_Y_SATISFY_INEQUALITY_XX_YY_N_2.py:10: error: Cannot determine type of \"x\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/COUNT_DISTINCT_NON_NEGATIVE_PAIRS_X_Y_SATISFY_INEQUALITY_XX_YY_N_2.py:10: error: Name \"x\" is used before definition  [used-before-def]\nresult2/check/transcoder/java2python/python_typed/COUNT_DISTINCT_NON_NEGATIVE_PAIRS_X_Y_SATISFY_INEQUALITY_XX_YY_N_2.py:11: error: Cannot determine type of \"y\"  [has-type]\nFound 3 errors in 1 file (checked 1 source file)\n"
    },
    "FAST_MULTIPLICATION_METHOD_WITHOUT_USING_MULTIPLICATION_OPERATOR_RUSSIAN_PEASANTS_ALGORITHM": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "C_PROGRAM_FIND_LARGEST_ELEMENT_ARRAY_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_SET_BITS_IN_AN_INTEGER_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SORT_AN_ARRAY_OF_0S_1S_AND_2S": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "    return a [ lo ] , a [ mid ]",
                "changetype": "type_noret"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SORT_AN_ARRAY_OF_0S_1S_AND_2S.py:23: error: No return value expected  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "LONGEST_SUBSEQUENCE_SUCH_THAT_DIFFERENCE_BETWEEN_ADJACENTS_IS_ONE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "WRITE_AN_EFFICIENT_METHOD_TO_CHECK_IF_A_NUMBER_IS_MULTIPLE_OF_3": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FINDING_POWER_PRIME_NUMBER_P_N": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_NUMBERS_CAN_CONSTRUCTED_USING_TWO_NUMBERS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_WHETHER_GIVEN_INTEGER_POWER_3_NOT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_WAYS_BUILD_STREET_GIVEN_CONSTRAINTS": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_WAYS_BUILD_STREET_GIVEN_CONSTRAINTS.py:9: error: Incompatible types in assignment (expression has type \"ndarray[Any, dtype[floating[_64Bit]]]\", variable has type \"list[list[int]]\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "NTH_PENTAGONAL_NUMBER": {
        "change": [
            {
                "type": "del",
                "line": 2,
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": 2,
                "content": "    return ( 3 * n ** 2 - n ) // 2",
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return ( 3 * n ** 2 - n ) // 2",
                "changetype": "type_RetFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/NTH_PENTAGONAL_NUMBER.py:9: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "NEXT_POWER_OF_2": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "STOOGE_SORT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMIZE_THE_MAXIMUM_DIFFERENCE_BETWEEN_THE_HEIGHTS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMUM_COST_MAKE_LONGEST_COMMON_SUBSEQUENCE_LENGTH_K": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "CONVERT_STRICTLY_INCREASING_ARRAY_MINIMUM_CHANGES": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "LCS_FORMED_CONSECUTIVE_SEGMENTS_LEAST_LENGTH_K": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "MAXIMUM_SUM_PAIRS_SPECIFIC_DIFFERENCE": {
        "change": [
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=1 ",
                "line": 4,
                "changetype": "forinit",
                "errtype": {
                    "for_init": "content"
                }
            },
            {
                "type": "del",
                "line": 4,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<N :",
                "line": 4,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 11,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_1": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "d Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 6,
                "old": "np.inf",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "line": -1,
                "content": "                indexes = d [ abs_diff ]",
                "changetype": "type_indexable"
            },
            {
                "type": "del",
                "line": 14,
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": 14,
                "content": "    return int(d) ",
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return int(d) ",
                "changetype": "type_RetFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_1.py:9: error: Incompatible types in assignment (expression has type \"dict[Never, Never]\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_1.py:12: error: Unsupported target for indexed assignment (\"int\")  [index]\nresult2/check/transcoder/java2python/python_typed/FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_1.py:12: error: Name \"Indexes\" is not defined  [name-defined]\nresult2/check/transcoder/java2python/python_typed/FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_1.py:17: error: \"float\" has no attribute \"has_key\"  [attr-defined]\nresult2/check/transcoder/java2python/python_typed/FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_1.py:18: error: Value of type \"float\" is not indexable  [index]\nresult2/check/transcoder/java2python/python_typed/FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D_1.py:21: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 6 errors in 1 file (checked 1 source file)\n"
    },
    "GNOME_SORT_A_STUPID_ONE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMIZE_VOLUME_CUBOID_GIVEN_SUM_SIDES_1": {
        "change": [
            {
                "type": "del",
                "line": 2,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 2,
                "content": "    length = s // 3",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    length = s // 3",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "del",
                "line": 4,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 4,
                "content": "    breadth = s // 2",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    breadth = s // 2",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMIZE_VOLUME_CUBOID_GIVEN_SUM_SIDES_1.py:9: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/MAXIMIZE_VOLUME_CUBOID_GIVEN_SUM_SIDES_1.py:11: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "SUM_DIVISORS_1_N_1": {
        "change": [
            {
                "type": "del",
                "line": 4,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 4,
                "content": "        sum += ( n // i ) ** i",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        sum += ( n // i ) ** i",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SUM_DIVISORS_1_N_1.py:11: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SQUARE_ROOT_OF_AN_INTEGER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CALCULATE_VOLUME_DODECAHEDRON": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_SUM_2_X_N_GRID_NO_TWO_ELEMENTS_ADJACENT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_LARGEST_D_IN_ARRAY_SUCH_THAT_A_B_C_D.py:8: error: Missing return statement  [return]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "MAXIMUM_SUBARRAY_SUM_ARRAY_CREATED_REPEATED_CONCATENATION": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "max_so_far Integer.MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "0",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMUM_SUBARRAY_SUM_ARRAY_CREATED_REPEATED_CONCATENATION.py:18: error: Incompatible return value type (got \"tuple[int, int]\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SORT_ARRAY_TWO_HALVES_SORTED": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "    return np.argsort ( A ) [ : n ]",
                "changetype": "type_noret"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SORT_ARRAY_TWO_HALVES_SORTED.py:9: error: No return value expected  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "MINIMUM_ROTATIONS_REQUIRED_GET_STRING": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MINIMUM_ROTATIONS_REQUIRED_GET_STRING.py:9: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_ROTATIONS_REQUIRED_GET_STRING.py:9: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nresult2/check/transcoder/java2python/python_typed/MINIMUM_ROTATIONS_REQUIRED_GET_STRING.py:12: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_ROTATIONS_REQUIRED_GET_STRING.py:12: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nresult2/check/transcoder/java2python/python_typed/MINIMUM_ROTATIONS_REQUIRED_GET_STRING.py:12: error: Value of type str? is not indexable  [index]\nFound 3 errors in 1 file (checked 1 source file)\n"
    },
    "SEARCH_AN_ELEMENT_IN_AN_ARRAY_WHERE_DIFFERENCE_BETWEEN_ADJACENT_ELEMENTS_IS_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_POSSIBLE_GROUPS_SIZE_2_3_SUM_MULTIPLE_3": {
        "change": [
            {
                "type": "del",
                "line": 9,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 9,
                "content": "    res += ( c [ 0 ] * ( c [ 0 ] - 1 ) * ( c [ 0 ] - 2 ) ) // 6",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    res += ( c [ 0 ] * ( c [ 0 ] - 1 ) * ( c [ 0 ] - 2 ) ) // 6",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "del",
                "line": 10,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 10,
                "content": "    res += ( c [ 1 ] * ( c [ 1 ] - 1 ) * ( c [ 1 ] - 2 ) ) // 6",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    res += ( c [ 1 ] * ( c [ 1 ] - 1 ) * ( c [ 1 ] - 2 ) ) // 6",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "del",
                "line": 11,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 11,
                "content": "    res += ( ( c [ 2 ] * ( c [ 2 ] - 1 ) * ( c [ 2 ] - 2 ) ) // 6 )",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    res += ( ( c [ 2 ] * ( c [ 2 ] - 1 ) * ( c [ 2 ] - 2 ) ) // 6 )",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_POSSIBLE_GROUPS_SIZE_2_3_SUM_MULTIPLE_3.py:16: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/COUNT_POSSIBLE_GROUPS_SIZE_2_3_SUM_MULTIPLE_3.py:17: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/COUNT_POSSIBLE_GROUPS_SIZE_2_3_SUM_MULTIPLE_3.py:18: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 3 errors in 1 file (checked 1 source file)\n"
    },
    "MINIMIZE_SUM_PRODUCT_TWO_ARRAYS_PERMUTATIONS_ALLOWED": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM_SET_2_O1_EXTRA_SPACE": {
        "change": [
            {
                "type": "del",
                "line": 12,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 12,
                "content": "        arr [ i ] = arr [ i ] // max_elem",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        arr [ i ] = arr [ i ] // max_elem",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return arr",
                "changetype": "type_noret"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM_SET_2_O1_EXTRA_SPACE.py:20: error: No overload variant of \"__setitem__\" of \"list\" matches argument types \"int\", \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM_SET_2_O1_EXTRA_SPACE.py:20: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM_SET_2_O1_EXTRA_SPACE.py:20: note:     def __setitem__(self, SupportsIndex, int, /) -> None\nresult2/check/transcoder/java2python/python_typed/REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM_SET_2_O1_EXTRA_SPACE.py:20: note:     def __setitem__(self, slice, Iterable[int], /) -> None\nresult2/check/transcoder/java2python/python_typed/REARRANGE_ARRAY_MAXIMUM_MINIMUM_FORM_SET_2_O1_EXTRA_SPACE.py:21: error: No return value expected  [return-value]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "FIND_SUM_NODES_GIVEN_PERFECT_BINARY_TREE_1": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_SUM_NODES_GIVEN_PERFECT_BINARY_TREE_1.py:9: error: Incompatible types in assignment (expression has type \"ndarray[Any, dtype[signedinteger[Any]]]\", variable has type \"float\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "LARGEST_SUBSEQUENCE_GCD_GREATER_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_SUBSTRINGS_WITH_SAME_FIRST_AND_LAST_CHARACTERS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_PALINDROMIC_SUBSEQUENCE_GIVEN_STRING": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_PALINDROMIC_SUBSEQUENCE_GIVEN_STRING.py:10: error: List comprehension has incompatible type List[int]; expected List[list[int]]  [misc]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SEARCH_ALMOST_SORTED_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_HARMONIC_MEAN_USING_ARITHMETIC_MEAN_GEOMETRIC_MEAN": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CHECK_IF_X_CAN_GIVE_CHANGE_TO_EVERY_PERSON_IN_THE_QUEUE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMIZE_THE_SUM_OF_DIGITS_OF_A_AND_B_SUCH_THAT_A_B_N": {
        "change": [
            {
                "type": "del",
                "line": 5,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 5,
                "content": "        n //= 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        n //= 10",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MINIMIZE_THE_SUM_OF_DIGITS_OF_A_AND_B_SUCH_THAT_A_B_N.py:12: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "COMPUTE_NCR_P_SET_1_INTRODUCTION_AND_DYNAMIC_PROGRAMMING_SOLUTION": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COMPUTE_NCR_P_SET_1_INTRODUCTION_AND_DYNAMIC_PROGRAMMING_SOLUTION.py:9: error: Incompatible types in assignment (expression has type \"ndarray[Any, dtype[floating[_64Bit]]]\", variable has type \"list[int]\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "ARRAY_RANGE_QUERIES_ELEMENTS_FREQUENCY_VALUE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FRIENDS_PAIRING_PROBLEM": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_NEGATIVE_NUMBERS_IN_A_COLUMN_WISE_ROW_WISE_SORTED_MATRIX": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "N_TH_NUMBER_WHOSE_SUM_OF_DIGITS_IS_TEN": {
        "change": [
            {
                "type": "add",
                "content": [
                    "x=x/10"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "        x=curr ",
                "line": 5,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content",
                    "for_update": "content"
                }
            },
            {
                "type": "del",
                "line": 5,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "        while x>0 :",
                "line": 5,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "            x=x/10",
                "line": 7,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/N_TH_NUMBER_WHOSE_SUM_OF_DIGITS_IS_TEN.py:8: error: Missing return statement  [return]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "MINIMUM_SUM_SUBSEQUENCE_LEAST_ONE_EVERY_FOUR_CONSECUTIVE_ELEMENTS_PICKED": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "N_TH_NUMBER_WHOSE_SUM_OF_DIGITS_IS_TEN_2": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_CHECK_INPUT_INTEGER_STRING": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SUM_MATRIX_ELEMENT_ABSOLUTE_DIFFERENCE_ROW_COLUMN_NUMBERS_2": {
        "change": [
            {
                "type": "del",
                "line": 4,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 4,
                "content": "    sum += ( n * ( n + 1 ) ) // 2",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    sum += ( n * ( n + 1 ) ) // 2",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "del",
                "line": 5,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 5,
                "content": "    sum += ( n * ( n + 1 ) * ( 2 * n + 1 ) ) // 6",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    sum += ( n * ( n + 1 ) * ( 2 * n + 1 ) ) // 6",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SUM_MATRIX_ELEMENT_ABSOLUTE_DIFFERENCE_ROW_COLUMN_NUMBERS_2.py:11: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/SUM_MATRIX_ELEMENT_ABSOLUTE_DIFFERENCE_ROW_COLUMN_NUMBERS_2.py:12: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "REARRANGE_POSITIVE_AND_NEGATIVE_NUMBERS_PUBLISH": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "    return arr , temp",
                "changetype": "type_noret"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/REARRANGE_POSITIVE_AND_NEGATIVE_NUMBERS_PUBLISH.py:25: error: No return value expected  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "CHECK_IF_A_NUMBER_IS_POWER_OF_ANOTHER_NUMBER_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMUM_NUMBER_OF_JUMPS_TO_REACH_END_OF_A_GIVEN_ARRAY_1": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "jumps [ i ] Integer . MAX_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 8,
                "old": "int('inf')",
                "new": "sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "content": " i <= j + arr [ j ] && jumps [ j ] != Integer . MAX_VALUE ",
                "line": -1,
                "changetype": "maxmin1"
            },
            {
                "type": "add",
                "content": "            if i<=j+arr[j] and jumps[j]!=sys.maxsize:",
                "line": 10,
                "changetype": "maxmin1"
            },
            {
                "type": "del",
                "line": 10,
                "changetype": "maxmin1"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "HOW_TO_CHECK_IF_A_GIVEN_ARRAY_REPRESENTS_A_BINARY_HEAP": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "WAYS_TRANSFORMING_ONE_STRING_REMOVING_0_CHARACTERS": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/WAYS_TRANSFORMING_ONE_STRING_REMOVING_0_CHARACTERS.py:13: error: Incompatible types in assignment (expression has type \"list[int]\", variable has type \"list[list[int]]\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "EFFICIENT_SEARCH_IN_AN_ARRAY_WHERE_DIFFERENCE_BETWEEN_ADJACENT_IS_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SELECT_A_RANDOM_NUMBER_FROM_STREAM_WITH_O1_SPACE": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SELECT_A_RANDOM_NUMBER_FROM_STREAM_WITH_O1_SPACE.py:15: error: Name \"random\" is not defined  [name-defined]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "FIBONACCI_MODULO_P": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DIVISIBILITY_BY_7": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/DIVISIBILITY_BY_7.py:15: error: Argument 1 to \"f_gold\" has incompatible type \"float\"; expected \"int\"  [arg-type]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "HOW_TO_CHECK_IF_A_GIVEN_ARRAY_REPRESENTS_A_BINARY_HEAP_1": {
        "change": [
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=0 ",
                "line": 2,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 2,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<(n-2)/2+1 :",
                "line": 2,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 7,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_WHETHER_A_GIVEN_NUMBER_IS_A_POWER_OF_4_OR_NOT": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_WHETHER_A_GIVEN_NUMBER_IS_A_POWER_OF_4_OR_NOT.py:14: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "PATH_MAXIMUM_AVERAGE_VALUE": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['N+1', 'N+1']['N+1']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "[ 0 ] * ( N + 1 )",
                "new": "[[0 for _ in range(N+1)] for _ in range(N+1)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PATH_MAXIMUM_AVERAGE_VALUE.py:9: error: List item 0 has incompatible type \"int\"; expected \"list[int]\"  [list-item]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "BASIC_AND_EXTENDED_EUCLIDEAN_ALGORITHMS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_FIND_SLOPE_LINE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MEDIAN_OF_TWO_SORTED_ARRAYS": {
        "change": [
            {
                "type": "add",
                "content": [
                    "count++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    count=0 ",
                "line": 6,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 6,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while count<n+1 :",
                "line": 6,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        count += 1",
                "line": 19,
                "changetype": "forupdate"
            },
            {
                "type": "del",
                "line": 19,
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": 19,
                "content": "    return ( m1 + m2 ) // 2",
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return ( m1 + m2 ) // 2",
                "changetype": "type_RetFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MEDIAN_OF_TWO_SORTED_ARRAYS.py:31: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "NTH_NON_FIBONACCI_NUMBER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_CONSECUTIVE_REPEATING_CHARACTER_STRING_1": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMUM_CONSECUTIVE_REPEATING_CHARACTER_STRING_1.py:11: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/MAXIMUM_CONSECUTIVE_REPEATING_CHARACTER_STRING_1.py:11: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "LARGEST_SUBARRAY_WITH_EQUAL_NUMBER_OF_0S_AND_1S": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_FOR_DEADLOCK_FREE_CONDITION_IN_OPERATING_SYSTEM": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_THE_MAXIMUM_SUBARRAY_XOR_IN_A_GIVEN_ARRAY": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "ans Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "int('-1')",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CHECK_INTEGER_OVERFLOW_MULTIPLICATION": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_SUM_EVEN_INDEX_BINOMIAL_COEFFICIENTS": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.py:11: error: No overload variant of \"sort\" matches argument types \"ndarray[Any, dtype[Any]]\", \"Callable[[Any], Any]\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.py:11: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.py:11: note:     def [_SCT <: generic] sort(a: _SupportsArray[dtype[_SCT]] | _NestedSequence[_SupportsArray[dtype[_SCT]]], axis: SupportsIndex | None = ..., kind: Literal['quicksort', 'mergesort', 'heapsort', 'stable'] | None = ..., order: str | Sequence[str] | None = ...) -> ndarray[Any, dtype[_SCT]]\nresult2/check/transcoder/java2python/python_typed/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.py:11: note:     def sort(a: _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes], axis: SupportsIndex | None = ..., kind: Literal['quicksort', 'mergesort', 'heapsort', 'stable'] | None = ..., order: str | Sequence[str] | None = ...) -> ndarray[Any, dtype[Any]]\nresult2/check/transcoder/java2python/python_typed/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.py:12: error: No overload variant of \"sort\" matches argument types \"ndarray[Any, dtype[Any]]\", \"Callable[[Any], Any]\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.py:12: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.py:12: note:     def [_SCT <: generic] sort(a: _SupportsArray[dtype[_SCT]] | _NestedSequence[_SupportsArray[dtype[_SCT]]], axis: SupportsIndex | None = ..., kind: Literal['quicksort', 'mergesort', 'heapsort', 'stable'] | None = ..., order: str | Sequence[str] | None = ...) -> ndarray[Any, dtype[_SCT]]\nresult2/check/transcoder/java2python/python_typed/PERMUTE_TWO_ARRAYS_SUM_EVERY_PAIR_GREATER_EQUAL_K.py:12: note:     def sort(a: _SupportsArray[dtype[Any]] | _NestedSequence[_SupportsArray[dtype[Any]]] | bool | int | float | complex | str | bytes | _NestedSequence[bool | int | float | complex | str | bytes], axis: SupportsIndex | None = ..., kind: Literal['quicksort', 'mergesort', 'heapsort', 'stable'] | None = ..., order: str | Sequence[str] | None = ...) -> ndarray[Any, dtype[Any]]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "SMALLEST_POWER_OF_2_GREATER_THAN_OR_EQUAL_TO_N_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_INVERSIONS_OF_SIZE_THREE_IN_A_GIVE_ARRAY_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "HIGHWAY_BILLBOARD_PROBLEM": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "WRITE_ONE_LINE_C_FUNCTION_TO_FIND_WHETHER_A_NO_IS_POWER_OF_TWO_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "NUMBER_VISIBLE_BOXES_PUTTING_ONE_INSIDE_ANOTHER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_TRIPLET_SUM_ARRAY_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_DECIMAL_BINARY_CONVERSION_2": {
        "change": [
            {
                "type": "del",
                "line": 7,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 7,
                "content": "        B_Number += int(  rem * c )",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        B_Number += int(  rem * c )",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "del",
                "line": 8,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 8,
                "content": "        N //= 2",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        N //= 2",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PROGRAM_DECIMAL_BINARY_CONVERSION_2.py:14: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/PROGRAM_DECIMAL_BINARY_CONVERSION_2.py:15: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "COUNT_BALANCED_BINARY_TREES_HEIGHT_H": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "dp",
                "changetype": "arrinit"
            },
            {
                "type": "replace",
                "line": 3,
                "old": "[ 1 ] * h + [ 1 ] * h",
                "new": "(h+h) * [0]",
                "changetype": "arrinit"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_THE_MISSING_NUMBER_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "REMOVE_ARRAY_END_ELEMENT_MAXIMIZE_SUM_PRODUCT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_NUMBER_OF_STRINGS_MADE_OF_R_G_AND_B_USING_GIVEN_COMBINATION": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "sum + fact [ n ] / ( fact [ i + r ] + fact [ j + b ] + fact [ k + g ] )",
                "changetype": "longcomp"
            },
            {
                "type": "replace2",
                "line": 10,
                "old": "sum + fact [ n ] / ( fact [ i + r ] + fact [ j + b ] + fact [ k + g ] )",
                "new": " sum+fact[n]//(fact[i+r]+fact[j+b]+fact[k+g])",
                "changetype": "longcomp"
            },
            {
                "type": "add",
                "line": -1,
                "content": "fact",
                "changetype": "arrinit"
            },
            {
                "type": "replace",
                "line": 2,
                "old": "[ 1 ] * ( n + 1 )",
                "new": "(n + 1) * [0]",
                "changetype": "arrinit"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_NUMBER_OF_STRINGS_MADE_OF_R_G_AND_B_USING_GIVEN_COMBINATION.py:17: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "COUNT_PAIRS_DIFFERENCE_EQUAL_K_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_NUMBER_TRANSFORMATION_MAKE_TWO_MATRIX_EQUAL": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "STEINS_ALGORITHM_FOR_FINDING_GCD": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "STACK_SET_3_REVERSE_STRING_USING_STACK": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/STACK_SET_3_REVERSE_STRING_USING_STACK.py:12: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/STACK_SET_3_REVERSE_STRING_USING_STACK.py:12: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "COUNT_MINIMUM_NUMBER_SUBSETS_SUBSEQUENCES_CONSECUTIVE_NUMBERS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_PAIRS_TWO_SORTED_ARRAYS_WHOSE_SUM_EQUAL_GIVEN_VALUE_X": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_MINIMUM_NUMBER_DIVIDED_MAKE_NUMBER_PERFECT_SQUARE": {
        "change": [
            {
                "type": "del",
                "line": 8,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 8,
                "content": "    for i in range( 3 ,int ( math.sqrt ( n ) ), 2 ):",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    for i in range( 3 ,int ( math.sqrt ( n ) ), 2 ):",
                "changetype": "type_CallFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_MINIMUM_NUMBER_DIVIDED_MAKE_NUMBER_PERFECT_SQUARE.py:13: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/FIND_MINIMUM_NUMBER_DIVIDED_MAKE_NUMBER_PERFECT_SQUARE.py:16: error: No overload variant of \"range\" matches argument types \"int\", \"float\", \"int\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/FIND_MINIMUM_NUMBER_DIVIDED_MAKE_NUMBER_PERFECT_SQUARE.py:16: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/FIND_MINIMUM_NUMBER_DIVIDED_MAKE_NUMBER_PERFECT_SQUARE.py:16: note:     def range(SupportsIndex, /) -> range\nresult2/check/transcoder/java2python/python_typed/FIND_MINIMUM_NUMBER_DIVIDED_MAKE_NUMBER_PERFECT_SQUARE.py:16: note:     def range(SupportsIndex, SupportsIndex, SupportsIndex = ..., /) -> range\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "LONGEST_COMMON_SUBSTRING": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "PROGRAM_PRINT_SUM_GIVEN_NTH_TERM_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "ADD_1_TO_A_GIVEN_NUMBER_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CIRCULAR_MATRIX_CONSTRUCT_A_MATRIX_WITH_NUMBERS_1_TO_MN_IN_SPIRAL_WAY": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "PROGRAM_BEST_FIT_ALGORITHM_MEMORY_MANAGEMENT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_NUMBER_BINARY_STRINGS_WITHOUT_CONSECUTIVE_1S": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['n']['n', 'n']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "np.zeros ( ( n , n ) )",
                "new": "[0 for _ in range(n)]",
                "changetype": "arrshape"
            },
            {
                "type": "add",
                "line": -1,
                "content": "['n']['n', 'n']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 3,
                "old": "np.zeros ( ( n , n ) )",
                "new": "[0 for _ in range(n)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_NUMBER_BINARY_STRINGS_WITHOUT_CONSECUTIVE_1S.py:9: error: Incompatible types in assignment (expression has type \"ndarray[Any, dtype[floating[_64Bit]]]\", variable has type \"list[int]\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/COUNT_NUMBER_BINARY_STRINGS_WITHOUT_CONSECUTIVE_1S.py:10: error: Incompatible types in assignment (expression has type \"ndarray[Any, dtype[floating[_64Bit]]]\", variable has type \"list[int]\")  [assignment]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "SUM_SERIES_0_6_0_06_0_006_0_0006_N_TERMS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_WHETHER_A_GIVEN_NUMBER_IS_A_POWER_OF_4_OR_NOT_2": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_SUM_IARRI_AMONG_ROTATIONS_GIVEN_ARRAY": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "res Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "int('-1')",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "HOW_CAN_WE_SUM_THE_DIGITS_OF_A_GIVEN_NUMBER_IN_SINGLE_STATEMENT": {
        "change": [
            {
                "type": "del",
                "line": 5,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 5,
                "content": "        n = n // 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        n = n // 10",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/HOW_CAN_WE_SUM_THE_DIGITS_OF_A_GIVEN_NUMBER_IN_SINGLE_STATEMENT.py:12: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "C_PROGRAM_CONCATENATE_STRING_GIVEN_NUMBER_TIMES": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_ROTATION_COUNT_ROTATED_SORTED_ARRAY_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MODULAR_EXPONENTIATION_POWER_IN_MODULAR_ARITHMETIC": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_NUMBER_PAIRS_N_B_N_GCD_B_B": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_MAXIMUM_DOT_PRODUCT_TWO_ARRAYS_INSERTION_0S": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['n+1', 'm+1']['n+1']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "[ 0 ] * ( n + 1 )",
                "new": "[[0 for _ in range(m+1)] for _ in range(n+1)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_MAXIMUM_DOT_PRODUCT_TWO_ARRAYS_INSERTION_0S.py:9: error: List item 0 has incompatible type \"int\"; expected \"list[int]\"  [list-item]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SQUARE_PYRAMIDAL_NUMBER_SUM_SQUARES": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SUM_PAIRWISE_PRODUCTS_2": {
        "change": [
            {
                "type": "del",
                "line": 2,
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": 2,
                "content": "    return n * ( n + 1 ) * ( n + 2 ) * ( 3 * n + 1 ) // 24",
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return n * ( n + 1 ) * ( n + 2 ) * ( 3 * n + 1 ) // 24",
                "changetype": "type_RetFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SUM_PAIRWISE_PRODUCTS_2.py:9: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "PROGRAM_PRINT_IDENTITY_MATRIX_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SQUARE_ROOT_OF_A_PERFECT_SQUARE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CAESAR_CIPHER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CHECK_STRING_CAN_OBTAINED_ROTATING_ANOTHER_STRING_2_PLACES": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/CHECK_STRING_CAN_OBTAINED_ROTATING_ANOTHER_STRING_2_PLACES.py:8: error: Missing return statement  [return]\nresult2/check/transcoder/java2python/python_typed/CHECK_STRING_CAN_OBTAINED_ROTATING_ANOTHER_STRING_2_PLACES.py:13: error: Name \"_\" is not defined  [name-defined]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "CALCULATE_MAXIMUM_VALUE_USING_SIGN_TWO_NUMBERS_STRING": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/CALCULATE_MAXIMUM_VALUE_USING_SIGN_TWO_NUMBERS_STRING.py:9: error: Unsupported left operand type for - (\"str\")  [operator]\nresult2/check/transcoder/java2python/python_typed/CALCULATE_MAXIMUM_VALUE_USING_SIGN_TWO_NUMBERS_STRING.py:12: error: Unsupported left operand type for - (\"str\")  [operator]\nresult2/check/transcoder/java2python/python_typed/CALCULATE_MAXIMUM_VALUE_USING_SIGN_TWO_NUMBERS_STRING.py:14: error: Unsupported left operand type for - (\"str\")  [operator]\nFound 3 errors in 1 file (checked 1 source file)\n"
    },
    "SUM_PAIRWISE_PRODUCTS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "NUMBER_RECTANGLES_NM_GRID": {
        "change": [
            {
                "type": "del",
                "line": 2,
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": 2,
                "content": "    return ( m * n * ( n + 1 ) * ( m + 1 ) ) // 4",
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return ( m * n * ( n + 1 ) * ( m + 1 ) ) // 4",
                "changetype": "type_RetFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/NUMBER_RECTANGLES_NM_GRID.py:9: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SORT_ARRAY_APPLYING_GIVEN_EQUATION": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "CHECK_POSSIBLE_TRANSFORM_ONE_STRING_ANOTHER": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['n+1', 'm+1']['n+1']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "[ False for i in range ( n + 1 ) ]",
                "new": "[[0 for _ in range(m+1)] for _ in range(n+1)]",
                "changetype": "arrshape"
            },
            {
                "type": "add",
                "content": [
                    "j++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "        j=0 ",
                "line": 10,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 10,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "        while j<len(s2)+1 :",
                "line": 10,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "            j += 1",
                "line": 16,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/CHECK_POSSIBLE_TRANSFORM_ONE_STRING_ANOTHER.py:11: error: List comprehension has incompatible type List[bool]; expected List[list[bool]]  [misc]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "CHECK_GIVEN_CIRCLE_LIES_COMPLETELY_INSIDE_RING_FORMED_TWO_CONCENTRIC_CIRCLES": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "NEXT_HIGHER_NUMBER_WITH_SAME_NUMBER_OF_SET_BITS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MIDDLE_OF_THREE_USING_MINIMUM_COMPARISONS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "WRITE_ONE_LINE_C_FUNCTION_TO_FIND_WHETHER_A_NO_IS_POWER_OF_TWO": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/WRITE_ONE_LINE_C_FUNCTION_TO_FIND_WHETHER_A_NO_IS_POWER_OF_TWO.py:14: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "MAXIMUM_BINOMIAL_COEFFICIENT_TERM_VALUE": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "PROGRAM_BINARY_DECIMAL_CONVERSION_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_CALCULATE_AREA_OCTAGON": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_WORST_FIT_ALGORITHM_MEMORY_MANAGEMENT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DIFFERENCE_BETWEEN_HIGHEST_AND_LEAST_FREQUENCIES_IN_AN_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_SET_BITS_IN_AN_INTEGER_3": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CHECK_ARRAY_REPRESENTS_INORDER_BINARY_SEARCH_TREE_NOT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MIDDLE_OF_THREE_USING_MINIMUM_COMPARISONS_2": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMUM_COST_MAKE_ARRAY_SIZE_1_REMOVING_LARGER_PAIRS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_SUM_SUBSEQUENCE_LEAST_K_DISTANT_ELEMENTS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION": {
        "change": [
            {
                "type": "del",
                "line": 9,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 9,
                "content": "            dp [ i ] = min ( dp [ i - 1 ] + insert , dp [ i // 2 ] + copy )",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "            dp [ i ] = min ( dp [ i - 1 ] + insert , dp [ i // 2 ] + copy )",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "del",
                "line": 11,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 11,
                "content": "            dp [ i ] = min ( dp [ i - 1 ] + insert , dp [ ( i + 1 ) // 2 ] + copy + remove )",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "            dp [ i ] = min ( dp [ i - 1 ] + insert , dp [ ( i + 1 ) // 2 ] + copy + remove )",
                "changetype": "type_CallFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.py:16: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.py:16: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.py:16: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.py:16: note:     def __getitem__(self, slice, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.py:18: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.py:18: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.py:18: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/MINIMUM_TIME_WRITE_CHARACTERS_USING_INSERT_DELETE_COPY_OPERATION.py:18: note:     def __getitem__(self, slice, /) -> list[int]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "COUNT_NUMBER_OF_WAYS_TO_PARTITION_A_SET_INTO_K_SUBSETS_1": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "MAXIMUM_GAMES_PLAYED_WINNER": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['N']['2']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "[ 1 , 2 ]",
                "new": "[0 for _ in range(N)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMUM_GAMES_PLAYED_WINNER.py:11: error: invalid syntax  [syntax]\nFound 1 error in 1 file (errors prevented further checking)\n"
    },
    "CHECK_STRING_FOLLOWS_ANBN_PATTERN_NOT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_SUM_ALTERNATING_SUBSEQUENCE_SUM": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "result Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 15,
                "old": "int('-')",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "line": -1,
                "content": "['n']['Unknown']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "[ ]",
                "new": "[0 for _ in range(n)]",
                "changetype": "arrshape"
            },
            {
                "type": "add",
                "line": -1,
                "content": "['n']['Unknown']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 5,
                "old": "[ ]",
                "new": "[0 for _ in range(n)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_TOTAL_SET_BITS_IN_ALL_NUMBERS_FROM_1_TO_N": {
        "change": [
            {
                "type": "add",
                "content": [
                    "j++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "        j=0 ",
                "line": 7,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 7,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "        while j<n+1 :",
                "line": 7,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "            j += 1",
                "line": 17,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CHECK_IF_ARRAY_ELEMENTS_ARE_CONSECUTIVE": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/CHECK_IF_ARRAY_ELEMENTS_ARE_CONSECUTIVE.py:11: error: Name \"get_min\" is not defined  [name-defined]\nresult2/check/transcoder/java2python/python_typed/CHECK_IF_ARRAY_ELEMENTS_ARE_CONSECUTIVE.py:12: error: Name \"get_max\" is not defined  [name-defined]\nresult2/check/transcoder/java2python/python_typed/CHECK_IF_ARRAY_ELEMENTS_ARE_CONSECUTIVE.py:19: error: Argument 1 to \"append\" of \"list\" has incompatible type \"int\"; expected \"bool\"  [arg-type]\nFound 3 errors in 1 file (checked 1 source file)\n"
    },
    "K_TH_PRIME_FACTOR_GIVEN_NUMBER": {
        "change": [
            {
                "type": "del",
                "line": 7,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 7,
                "content": "    for i in range( 3 ,int ( math.sqrt ( n ) ), 2 ):",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    for i in range( 3 ,int ( math.sqrt ( n ) ), 2 ):",
                "changetype": "type_CallFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/K_TH_PRIME_FACTOR_GIVEN_NUMBER.py:11: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/K_TH_PRIME_FACTOR_GIVEN_NUMBER.py:14: error: No overload variant of \"range\" matches argument types \"int\", \"float\", \"int\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/K_TH_PRIME_FACTOR_GIVEN_NUMBER.py:14: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/K_TH_PRIME_FACTOR_GIVEN_NUMBER.py:14: note:     def range(SupportsIndex, /) -> range\nresult2/check/transcoder/java2python/python_typed/K_TH_PRIME_FACTOR_GIVEN_NUMBER.py:14: note:     def range(SupportsIndex, SupportsIndex, SupportsIndex = ..., /) -> range\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "COUNT_DISTINCT_OCCURRENCES_AS_A_SUBSEQUENCE": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['m+1', 'n+1']['m+1+n+1', '1']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 6,
                "old": "[ [ 0 ] * ( m + 1 ) + [ 0 ] * ( n + 1 ) ]",
                "new": "[[0 for _ in range(n+1)] for _ in range(m+1)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "TILING_WITH_DOMINOES": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['n+1']['n+1', 'n+1']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "np.zeros ( ( n + 1 , n + 1 ) )",
                "new": "[0 for _ in range(n+1)]",
                "changetype": "arrshape"
            },
            {
                "type": "add",
                "line": -1,
                "content": "['n+1']['n+1', 'n+1']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 3,
                "old": "np.zeros ( ( n + 1 , n + 1 ) )",
                "new": "[0 for _ in range(n+1)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:9: error: Incompatible types in assignment (expression has type \"ndarray[Any, dtype[floating[_64Bit]]]\", variable has type \"list[int]\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:10: error: Incompatible types in assignment (expression has type \"ndarray[Any, dtype[floating[_64Bit]]]\", variable has type \"list[int]\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:11: error: No overload variant of \"__setitem__\" of \"list\" matches argument types \"tuple[int, int]\", \"int\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:11: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:11: note:     def __setitem__(self, SupportsIndex, int, /) -> None\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:11: note:     def __setitem__(self, slice, Iterable[int], /) -> None\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:12: error: No overload variant of \"__setitem__\" of \"list\" matches argument types \"tuple[int, int]\", \"int\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:12: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:12: note:     def __setitem__(self, SupportsIndex, int, /) -> None\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:12: note:     def __setitem__(self, slice, Iterable[int], /) -> None\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:13: error: No overload variant of \"__setitem__\" of \"list\" matches argument types \"tuple[int, int]\", \"int\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:13: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:13: note:     def __setitem__(self, SupportsIndex, int, /) -> None\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:13: note:     def __setitem__(self, slice, Iterable[int], /) -> None\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:14: error: No overload variant of \"__setitem__\" of \"list\" matches argument types \"tuple[int, int]\", \"int\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:14: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:14: note:     def __setitem__(self, SupportsIndex, int, /) -> None\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:14: note:     def __setitem__(self, slice, Iterable[int], /) -> None\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:16: error: No overload variant of \"__setitem__\" of \"list\" matches argument types \"tuple[int, int]\", \"Any\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:16: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:16: note:     def __setitem__(self, SupportsIndex, int, /) -> None\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:16: note:     def __setitem__(self, slice, Iterable[int], /) -> None\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:16: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"tuple[int, int]\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:16: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:16: note:     def __getitem__(self, slice, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:17: error: No overload variant of \"__setitem__\" of \"list\" matches argument types \"tuple[int, int]\", \"Any\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:17: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:17: note:     def __setitem__(self, SupportsIndex, int, /) -> None\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:17: note:     def __setitem__(self, slice, Iterable[int], /) -> None\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:17: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"tuple[int, int]\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:17: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:17: note:     def __getitem__(self, slice, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/TILING_WITH_DOMINOES.py:18: error: Incompatible return value type (got \"tuple[list[int], list[int]]\", expected \"int\")  [return-value]\nFound 11 errors in 1 file (checked 1 source file)\n"
    },
    "COUNT_NUMBER_WAYS_REACH_GIVEN_SCORE_GAME": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_NEGATIVE_NUMBERS_IN_A_COLUMN_WISE_ROW_WISE_SORTED_MATRIX_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_TO_CHECK_IF_A_MATRIX_IS_SYMMETRIC": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MULTIPLY_LARGE_INTEGERS_UNDER_LARGE_MODULO": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_FOR_FACTORIAL_OF_A_NUMBER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1": {
        "change": [
            {
                "type": "add",
                "content": [
                    "j--"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "            j=i-1 ",
                "line": 9,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 9,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "            while j>-2 :",
                "line": 9,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "                j -= 1",
                "line": 13,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=0 ",
                "line": 7,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 7,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<n+1 :",
                "line": 7,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 13,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "line": -1,
                "content": "                result.append ( chr ( int ( '0' + count ) ) )",
                "changetype": "type_OperatorStr"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1.py:17: error: Unsupported operand types for + (\"str\" and \"int\")  [operator]\nresult2/check/transcoder/java2python/python_typed/FORM_MINIMUM_NUMBER_FROM_GIVEN_SEQUENCE_1.py:20: error: Argument 1 to \"join\" of \"str\" has incompatible type \"list[str | int]\"; expected \"Iterable[str]\"  [arg-type]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "WAYS_REMOVE_ONE_ELEMENT_BINARY_STRING_XOR_BECOMES_ZERO": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/WAYS_REMOVE_ONE_ELEMENT_BINARY_STRING_XOR_BECOMES_ZERO.py:11: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/WAYS_REMOVE_ONE_ELEMENT_BINARY_STRING_XOR_BECOMES_ZERO.py:11: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nresult2/check/transcoder/java2python/python_typed/WAYS_REMOVE_ONE_ELEMENT_BINARY_STRING_XOR_BECOMES_ZERO.py:11: error: Incompatible types in assignment (expression has type \"list[str]\", variable has type \"list[str? | int]\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/WAYS_REMOVE_ONE_ELEMENT_BINARY_STRING_XOR_BECOMES_ZERO.py:11: note: \"List\" is invariant -- see https://mypy.readthedocs.io/en/stable/common_issues.html#variance\nresult2/check/transcoder/java2python/python_typed/WAYS_REMOVE_ONE_ELEMENT_BINARY_STRING_XOR_BECOMES_ZERO.py:11: note: Consider using \"Sequence\" instead, which is covariant\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "SWAP_BITS_IN_A_GIVEN_NUMBER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "LEONARDO_NUMBER_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "QUERIES_COUNTS_ARRAY_ELEMENTS_VALUES_GIVEN_RANGE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM.py:12: error: Argument 1 to \"append\" of \"list\" has incompatible type \"tuple[str | int, str | int]\"; expected \"list[int]\"  [arg-type]\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM.py:13: error: Argument 1 to \"append\" of \"list\" has incompatible type \"tuple[str | int, str | int]\"; expected \"list[int]\"  [arg-type]\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM.py:15: error: No overload variant of \"zip\" matches argument types \"int\", \"int\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM.py:15: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM.py:15: note:     def [_T_co] zip(*, strict: bool = ...) -> zip[Any]\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM.py:15: note:     def [_T_co, _T1] zip(Iterable[_T1], /, *, strict: bool = ...) -> zip[tuple[_T1]]\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM.py:15: note:     def [_T_co, _T1, _T2] zip(Iterable[_T1], Iterable[_T2], /, *, strict: bool = ...) -> zip[tuple[_T1, _T2]]\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM.py:15: note:     def [_T_co, _T1, _T2, _T3] zip(Iterable[_T1], Iterable[_T2], Iterable[_T3], /, *, strict: bool = ...) -> zip[tuple[_T1, _T2, _T3]]\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM.py:15: note:     def [_T_co, _T1, _T2, _T3, _T4] zip(Iterable[_T1], Iterable[_T2], Iterable[_T3], Iterable[_T4], /, *, strict: bool = ...) -> zip[tuple[_T1, _T2, _T3, _T4]]\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM.py:15: note:     def [_T_co, _T1, _T2, _T3, _T4, _T5] zip(Iterable[_T1], Iterable[_T2], Iterable[_T3], Iterable[_T4], Iterable[_T5], /, *, strict: bool = ...) -> zip[tuple[_T1, _T2, _T3, _T4, _T5]]\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_37_BOOLEAN_PARENTHESIZATION_PROBLEM.py:15: note:     def [_T_co] zip(Iterable[Any], Iterable[Any], Iterable[Any], Iterable[Any], Iterable[Any], Iterable[Any], /, *iterables: Iterable[Any], strict: bool = ...) -> zip[tuple[Any, ...]]\nFound 3 errors in 1 file (checked 1 source file)\n"
    },
    "RECURSIVE_C_PROGRAM_LINEARLY_SEARCH_ELEMENT_GIVEN_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "POSITIVE_ELEMENTS_EVEN_NEGATIVE_ODD_POSITIONS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SUM_FIBONACCI_NUMBERS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "AREA_OF_THE_CIRCLE_THAT_HAS_A_SQUARE_AND_A_CIRCLE_INSCRIBED_IN_IT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:12: error: Name \"b\" is not defined  [name-defined]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:14: error: Name \"b\" is not defined  [name-defined]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:16: error: No overload variant of \"range\" matches argument types \"int\", \"Any\", \"int\", \"bool\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:16: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:16: note:     def range(SupportsIndex, /) -> range\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:16: note:     def range(SupportsIndex, SupportsIndex, SupportsIndex = ..., /) -> range\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:17: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"tuple[int, int]\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:17: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:17: note:     def __getitem__(self, SupportsIndex, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:17: note:     def __getitem__(self, slice, /) -> list[list[int]]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:19: error: No overload variant of \"range\" matches argument types \"int\", \"int\", \"int\", \"Any\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:19: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:19: note:     def range(SupportsIndex, /) -> range\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:19: note:     def range(SupportsIndex, SupportsIndex, SupportsIndex = ..., /) -> range\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:20: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"tuple[int, Any]\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:20: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:20: note:     def __getitem__(self, SupportsIndex, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:20: note:     def __getitem__(self, slice, /) -> list[list[int]]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:22: error: No overload variant of \"range\" matches argument types \"Any\", \"int\", \"int\", \"bool\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:22: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:22: note:     def range(SupportsIndex, /) -> range\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:22: note:     def range(SupportsIndex, SupportsIndex, SupportsIndex = ..., /) -> range\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:23: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"tuple[int, int]\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:23: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:23: note:     def __getitem__(self, SupportsIndex, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:23: note:     def __getitem__(self, slice, /) -> list[list[int]]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:25: error: No overload variant of \"range\" matches argument types \"int\", \"int\", \"int\", \"bool\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:25: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:25: note:     def range(SupportsIndex, /) -> range\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:25: note:     def range(SupportsIndex, SupportsIndex, SupportsIndex = ..., /) -> range\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:26: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"tuple[int, int]\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:26: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:26: note:     def __getitem__(self, SupportsIndex, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/PRINT_MATRIX_SPIRAL_FORM_STARTING_POINT.py:26: note:     def __getitem__(self, slice, /) -> list[list[int]]\nFound 10 errors in 1 file (checked 1 source file)\n"
    },
    "FIND_THREE_ELEMENT_FROM_DIFFERENT_THREE_ARRAYS_SUCH_THAT_THAT_A_B_C_K_1": {
        "change": [
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=0 ",
                "line": 6,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 6,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<n2 :",
                "line": 6,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 10,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_REPETITIVE_ELEMENT_1_N_1": {
        "change": [
            {
                "type": "del",
                "line": 5,
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": 5,
                "content": "    return sum - ( ( ( n - 1 ) * n ) // 2 )",
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return sum - ( ( ( n - 1 ) * n ) // 2 )",
                "changetype": "type_RetFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_REPETITIVE_ELEMENT_1_N_1.py:12: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "REMAINDER_7_LARGE_NUMBERS": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/REMAINDER_7_LARGE_NUMBERS.py:13: error: Unsupported left operand type for - (\"str\")  [operator]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SPLIT_ARRAY_ADD_FIRST_PART_END": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DIVISIBILITY_9_USING_BITWISE_OPERATORS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_LAST_DIGIT_FACTORIAL_DIVIDES_FACTORIAL_B": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_PALINDROME_SUB_STRINGS_STRING": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['n', 'n']['n']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "[ [ ] for i in range ( n ) ]",
                "new": "[[0 for _ in range(n)] for _ in range(n)]",
                "changetype": "arrshape"
            },
            {
                "type": "add",
                "line": -1,
                "content": "['n', 'n']['n']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 3,
                "old": "[ [ ] for i in range ( n ) ]",
                "new": "[[0 for _ in range(n)] for _ in range(n)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_FREQUENCY_K_MATRIX_SIZE_N_MATRIXI_J_IJ": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "N_TH_TERM_SERIES_2_12_36_80_150": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "RECURSIVELY_BREAK_NUMBER_3_PARTS_GET_MAXIMUM_SUM": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/RECURSIVELY_BREAK_NUMBER_3_PARTS_GET_MAXIMUM_SUM.py:11: error: Argument 1 to \"f_gold\" has incompatible type \"float\"; expected \"int\"  [arg-type]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "COMPUTE_AVERAGE_TWO_NUMBERS_WITHOUT_OVERFLOW": {
        "change": [
            {
                "type": "del",
                "line": 2,
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": 2,
                "content": "    return ( a + b ) // 2",
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return ( a + b ) // 2",
                "changetype": "type_RetFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COMPUTE_AVERAGE_TWO_NUMBERS_WITHOUT_OVERFLOW.py:9: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "CHECK_NUMBER_IS_PERFECT_SQUARE_USING_ADDITIONSUBTRACTION": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/CHECK_NUMBER_IS_PERFECT_SQUARE_USING_ADDITIONSUBTRACTION.py:9: error: Name \"itertools\" is not defined  [name-defined]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "PRINT_MAXIMUM_SHORTEST_DISTANCE": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "ans Integer . MAX_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 10,
                "old": "int(0)",
                "new": "sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PRINT_MAXIMUM_SHORTEST_DISTANCE.py:13: error: \"dict[int, int]\" has no attribute \"has_key\"  [attr-defined]\nresult2/check/transcoder/java2python/python_typed/PRINT_MAXIMUM_SHORTEST_DISTANCE.py:20: error: \"dict[int, int]\" has no attribute \"has_key\"  [attr-defined]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION": {
        "change": [
            {
                "type": "del",
                "line": 5,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 5,
                "content": "            table [ i // 2 ] = min ( table [ i ] + 1 , table [ i // 2 ] )",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "            table [ i // 2 ] = min ( table [ i ] + 1 , table [ i // 2 ] )",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "del",
                "line": 5,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 5,
                "content": "            table [ i // 2 ] = min ( table [ i ] + 1 , table [ i // 2 ] )",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "            table [ i // 2 ] = min ( table [ i ] + 1 , table [ i // 2 ] )",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "del",
                "line": 7,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 7,
                "content": "            table [ i // 3 ] = min ( table [ i ] + 1 , table [ i // 3 ] )",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "            table [ i // 3 ] = min ( table [ i ] + 1 , table [ i // 3 ] )",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "del",
                "line": 7,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 7,
                "content": "            table [ i // 3 ] = min ( table [ i ] + 1 , table [ i // 3 ] )",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "            table [ i // 3 ] = min ( table [ i ] + 1 , table [ i // 3 ] )",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return table [ 1 : ]",
                "changetype": "type_RetPrimclct"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:12: error: No overload variant of \"__setitem__\" of \"list\" matches argument types \"float\", \"Any\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:12: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:12: note:     def __setitem__(self, SupportsIndex, int, /) -> None\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:12: note:     def __setitem__(self, slice, Iterable[int], /) -> None\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:12: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:12: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:12: note:     def __getitem__(self, slice, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:14: error: No overload variant of \"__setitem__\" of \"list\" matches argument types \"float\", \"Any\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:14: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:14: note:     def __setitem__(self, SupportsIndex, int, /) -> None\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:14: note:     def __setitem__(self, slice, Iterable[int], /) -> None\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:14: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:14: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:14: note:     def __getitem__(self, slice, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_STEPS_MINIMIZE_N_PER_GIVEN_CONDITION.py:15: error: Incompatible return value type (got \"list[int]\", expected \"int\")  [return-value]\nFound 5 errors in 1 file (checked 1 source file)\n"
    },
    "CHECK_REVERSING_SUB_ARRAY_MAKE_ARRAY_SORTED_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_SUM_EVEN_FACTORS_NUMBER": {
        "change": [
            {
                "type": "del",
                "line": 5,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 5,
                "content": "    for i in range( 2 ,int ( math.sqrt ( n ) )):",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    for i in range( 2 ,int ( math.sqrt ( n ) )):",
                "changetype": "type_CallFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_SUM_EVEN_FACTORS_NUMBER.py:12: error: No overload variant of \"range\" matches argument types \"int\", \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/FIND_SUM_EVEN_FACTORS_NUMBER.py:12: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/FIND_SUM_EVEN_FACTORS_NUMBER.py:12: note:     def range(SupportsIndex, /) -> range\nresult2/check/transcoder/java2python/python_typed/FIND_SUM_EVEN_FACTORS_NUMBER.py:12: note:     def range(SupportsIndex, SupportsIndex, SupportsIndex = ..., /) -> range\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "FIND_FIRST_NATURAL_NUMBER_WHOSE_FACTORIAL_DIVISIBLE_X": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "LENGTH_OF_THE_LONGEST_ARITHMATIC_PROGRESSION_IN_A_SORTED_ARRAY": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['n', 'n']['n']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "[ [ ] for i in range ( n ) ]",
                "new": "[[0 for _ in range(n)] for _ in range(n)]",
                "changetype": "arrshape"
            },
            {
                "type": "add",
                "content": [
                    "j--"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    j=n-2 ",
                "line": 8,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 8,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while j>0 :",
                "line": 8,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        j -= 1",
                "line": 24,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/LENGTH_OF_THE_LONGEST_ARITHMATIC_PROGRESSION_IN_A_SORTED_ARRAY.py:16: error: Name \"i\" already defined on line 13  [no-redef]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "RECURSIVE_INSERTION_SORT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DICE_THROW_PROBLEM": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/DICE_THROW_PROBLEM.py:12: error: Cannot determine type of \"k\"  [has-type]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "NEXT_POWER_OF_2_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "ARRAY_ELEMENT_MOVED_K_USING_SINGLE_MOVES": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMUM_XOR_VALUE_PAIR": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "min_xor Integer . MAX_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "sys.maxint",
                "new": "sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MINIMUM_XOR_VALUE_PAIR.py:9: error: Name \"sys\" is not defined  [name-defined]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SUM_OF_ALL_ELEMENTS_UP_TO_NTH_ROW_IN_A_PASCALS_TRIANGLE_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "TRIANGULAR_MATCHSTICK_NUMBER": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": " ( 3 * x ** ( x + 1 ) ) / 2",
                "changetype": "longcomp"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": " ( 3 * x ** ( x + 1 ) ) / 2",
                "new": " int((3*x*(x+1))//2)",
                "changetype": "longcomp"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_THE_MINIMUM_DISTANCE_BETWEEN_TWO_NUMBERS": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_THE_MINIMUM_DISTANCE_BETWEEN_TWO_NUMBERS.py:11: error: Name \"sys\" is not defined  [name-defined]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "COUNT_TRAILING_ZEROES_FACTORIAL_NUMBER": {
        "change": [
            {
                "type": "add",
                "content": [
                    "i=i*5"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=5 ",
                "line": 3,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content",
                    "for_update": "content"
                }
            },
            {
                "type": "del",
                "line": 3,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while n/i>0 :",
                "line": 3,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i=i*5",
                "line": 5,
                "changetype": "forupdate"
            },
            {
                "type": "del",
                "line": 4,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 4,
                "content": "        count += n // i",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        count += n // i",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_TRAILING_ZEROES_FACTORIAL_NUMBER.py:10: error: Cannot determine type of \"i\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/COUNT_TRAILING_ZEROES_FACTORIAL_NUMBER.py:10: error: Name \"i\" is used before definition  [used-before-def]\nresult2/check/transcoder/java2python/python_typed/COUNT_TRAILING_ZEROES_FACTORIAL_NUMBER.py:11: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 3 errors in 1 file (checked 1 source file)\n"
    },
    "FRIENDS_PAIRING_PROBLEM_2": {
        "change": [
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=3 ",
                "line": 5,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 5,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<n+1 :",
                "line": 5,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 8,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_ENTRIES_EQUAL_TO_X_IN_A_SPECIAL_MATRIX": {
        "change": [
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=1 ",
                "line": 3,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 3,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<=n and i<=x :",
                "line": 3,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 6,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_DIGITS_FACTORIAL_SET_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_FIND_STRING_START_END_GEEKS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_POSSIBLE_SUM_WINDOW_ARRAY_ELEMENTS_WINDOW_ARRAY_UNIQUE": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMUM_POSSIBLE_SUM_WINDOW_ARRAY_ELEMENTS_WINDOW_ARRAY_UNIQUE.py:14: error: Argument 1 to \"issubset\" of \"set\" has incompatible type \"int\"; expected \"Iterable[Any]\"  [arg-type]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SWAP_TWO_NIBBLES_BYTE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES": {
        "change": [
            {
                "type": "add",
                "content": "ch == ch",
                "line": -1,
                "changetype": "ifcond"
            },
            {
                "type": "replace",
                "old": "ch == ch",
                "new": "(s[i]==ch)",
                "line": 6,
                "changetype": "ifcond"
            },
            {
                "type": "add",
                "content": "ch == ch",
                "line": -1,
                "changetype": "ifcond"
            },
            {
                "type": "replace",
                "old": "ch == ch",
                "new": "(s[i]==ch)",
                "line": 10,
                "changetype": "ifcond"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES.py:9: error: Too many values to unpack (4 expected, 5 provided)  [misc]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES.py:11: error: Name \"cnt\" already defined on line 9  [no-redef]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES.py:12: error: Cannot determine type of \"last\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES.py:14: error: Cannot determine type of \"cnt\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES.py:16: error: Cannot determine type of \"last\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES.py:18: error: Cannot determine type of \"size\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES.py:19: error: Name \"new_last\" already defined on line 9  [no-redef]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES.py:20: error: Name \"last\" already defined on line 9  [no-redef]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES.py:20: error: Cannot determine type of \"new_last\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_LARGEST_SUBSEQUENCE_EVERY_CHARACTER_OCCURS_LEAST_K_TIMES.py:21: error: Cannot determine type of \"size\"  [has-type]\nFound 10 errors in 1 file (checked 1 source file)\n"
    },
    "FIND_MINIMUM_DIFFERENCE_PAIR_1": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "diff Integer . MAX_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 3,
                "old": "int(arr[0])",
                "new": "sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "HEXAGONAL_NUMBER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_SET_BITS_IN_AN_INTEGER_2": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "LEXICOGRAPHICALLY_MINIMUM_STRING_ROTATION": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_MINIMUM_STRING_ROTATION.py:10: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_MINIMUM_STRING_ROTATION.py:10: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_MINIMUM_STRING_ROTATION.py:11: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_MINIMUM_STRING_ROTATION.py:11: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_MINIMUM_STRING_ROTATION.py:13: error: Value of type str? is not indexable  [index]\nFound 3 errors in 1 file (checked 1 source file)\n"
    },
    "LEXICOGRAPHICAL_CONCATENATION_SUBSTRINGS_STRING": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMUM_COST_CONNECT_WEIGHTED_NODES_REPRESENTED_ARRAY": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "mn Integer . MAX_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "int(a[0])",
                "new": "sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_OCTAL_DECIMAL_CONVERSION": {
        "change": [
            {
                "type": "del",
                "line": 8,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 8,
                "content": "        temp = temp // 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        temp = temp // 10",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PROGRAM_OCTAL_DECIMAL_CONVERSION.py:15: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "LARGEST_SUBARRAY_WITH_EQUAL_NUMBER_OF_0S_AND_1S_1": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/LARGEST_SUBARRAY_WITH_EQUAL_NUMBER_OF_0S_AND_1S_1.py:21: error: \"dict[int, int]\" has no attribute \"has_key\"  [attr-defined]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "PRIME_NUMBERS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "REPLACE_CHARACTER_C1_C2_C2_C1_STRING_S": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/REPLACE_CHARACTER_C1_C2_C2_C1_STRING_S.py:10: error: Incompatible types in assignment (expression has type \"str\", variable has type \"list[str | int]\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "MINIMUM_ROTATIONS_UNLOCK_CIRCULAR_LOCK": {
        "change": [
            {
                "type": "del",
                "line": 8,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 8,
                "content": "        input //= 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        input //= 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "del",
                "line": 9,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 9,
                "content": "        unlock_code //= 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        unlock_code //= 10",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MINIMUM_ROTATIONS_UNLOCK_CIRCULAR_LOCK.py:10: error: \"int\" object is not iterable  [misc]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_ROTATIONS_UNLOCK_CIRCULAR_LOCK.py:12: error: Name \"input_digit\" already defined on line 10  [no-redef]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_ROTATIONS_UNLOCK_CIRCULAR_LOCK.py:13: error: Name \"code_digit\" already defined on line 10  [no-redef]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_ROTATIONS_UNLOCK_CIRCULAR_LOCK.py:14: error: Cannot determine type of \"input_digit\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_ROTATIONS_UNLOCK_CIRCULAR_LOCK.py:14: error: Cannot determine type of \"code_digit\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_ROTATIONS_UNLOCK_CIRCULAR_LOCK.py:15: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nresult2/check/transcoder/java2python/python_typed/MINIMUM_ROTATIONS_UNLOCK_CIRCULAR_LOCK.py:16: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 7 errors in 1 file (checked 1 source file)\n"
    },
    "MAXIMUM_LENGTH_SUBSEQUENCE_DIFFERENCE_ADJACENT_ELEMENTS_EITHER_0_1": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['n']['1']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "[ 1 ]",
                "new": "[0 for _ in range(n)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_FIND_SMALLEST_DIFFERENCE_ANGLES_TWO_PARTS_GIVEN_CIRCLE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "K_TH_ELEMENT_TWO_SORTED_ARRAYS": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "SUM_MANHATTAN_DISTANCES_PAIRS_POINTS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMUM_SUM_TWO_NUMBERS_FORMED_DIGITS_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "EULERS_CRITERION_CHECK_IF_SQUARE_ROOT_UNDER_MODULO_P_EXISTS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_INDEX_GIVEN_FIBONACCI_NUMBER_CONSTANT_TIME": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_INDEX_GIVEN_FIBONACCI_NUMBER_CONSTANT_TIME.py:18: error: Need more than 2 values to unpack (3 expected)  [misc]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "MINIMUM_PERIMETER_N_BLOCKS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_SUM_EVEN_INDEX_BINOMIAL_COEFFICIENTS_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_LENGTH_PREFIX_ONE_STRING_OCCURS_SUBSEQUENCE_ANOTHER": {
        "change": [
            {
                "type": "add",
                "content": "c == s [ count ]",
                "line": -1,
                "changetype": "ifcond"
            },
            {
                "type": "replace",
                "old": "c == s [ count ]",
                "new": "(t[i]==s[count])",
                "line": 6,
                "changetype": "ifcond"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_INDEX_OF_AN_EXTRA_ELEMENT_PRESENT_IN_ONE_SORTED_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "NUMBER_OF_PAIRS_IN_AN_ARRAY_HAVING_SUM_EQUAL_TO_PRODUCT": {
        "change": [
            {
                "type": "del",
                "line": 6,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 6,
                "content": "    cnt = ( zero * ( zero - 1 ) ) // 2 + ( two * ( two - 1 ) ) // 2",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    cnt = ( zero * ( zero - 1 ) ) // 2 + ( two * ( two - 1 ) ) // 2",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/NUMBER_OF_PAIRS_IN_AN_ARRAY_HAVING_SUM_EQUAL_TO_PRODUCT.py:14: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "EFFICIENT_WAY_CHECK_WHETHER_N_TH_FIBONACCI_NUMBER_MULTIPLE_10": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_SUBSEQUENCE_SUM_SUCH_THAT_NO_THREE_ARE_CONSECUTIVE": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": " max ( sum [ 1 : ] , max ( arr [ 1 : ] + arr [ 2 : ] , arr [ 0 ] + arr [ 2 ] ) ) ",
                "changetype": "longcomp"
            },
            {
                "type": "replace2",
                "line": 8,
                "old": " max ( sum [ 1 : ] , max ( arr [ 1 : ] + arr [ 2 : ] , arr [ 0 ] + arr [ 2 ] ) ) ",
                "new": " max(sum[1],max(arr[1]+arr[2],arr[0]+arr[2]))",
                "changetype": "longcomp"
            },
            {
                "type": "add",
                "line": -1,
                "content": " max ( max ( sum [ - 1 ] , sum [ - 2 ] + arr [ i ] ) , arr [ i ] + arr [ i - 1 ] + sum [ - 3 ] ) ",
                "changetype": "longcomp"
            },
            {
                "type": "replace2",
                "line": 10,
                "old": " max ( max ( sum [ - 1 ] , sum [ - 2 ] + arr [ i ] ) , arr [ i ] + arr [ i - 1 ] + sum [ - 3 ] ) ",
                "new": " max(max(sum[i-1],sum[i-2]+arr[i]),arr[i]+arr[i-1]+sum[i-3])",
                "changetype": "longcomp"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMUM_SUBSEQUENCE_SUM_SUCH_THAT_NO_THREE_ARE_CONSECUTIVE.py:15: error: Argument 1 to \"append\" of \"list\" has incompatible type \"list[int] | SupportsDunderLT[Any] | SupportsDunderGT[Any]\"; expected \"int\"  [arg-type]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "FIND_MINIMUM_DIFFERENCE_PAIR": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_MINIMUM_DIFFERENCE_PAIR.py:9: error: Name \"sys\" is not defined  [name-defined]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "LEXICOGRAPHICALLY_PREVIOUS_PERMUTATION_IN_C": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_PREVIOUS_PERMUTATION_IN_C.py:11: error: Unsupported operand types for <= (\"str\" and \"int\")  [operator]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_PREVIOUS_PERMUTATION_IN_C.py:11: error: Unsupported operand types for <= (\"int\" and \"str\")  [operator]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_PREVIOUS_PERMUTATION_IN_C.py:11: note: Both left and right operands are unions\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_PREVIOUS_PERMUTATION_IN_C.py:15: error: Unsupported operand types for <= (\"str\" and \"int\")  [operator]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_PREVIOUS_PERMUTATION_IN_C.py:15: error: Unsupported operand types for <= (\"int\" and \"str\")  [operator]\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_PREVIOUS_PERMUTATION_IN_C.py:15: note: Both left and right operands are unions\nresult2/check/transcoder/java2python/python_typed/LEXICOGRAPHICALLY_PREVIOUS_PERMUTATION_IN_C.py:16: error: Name \"swap\" is not defined  [name-defined]\nFound 5 errors in 1 file (checked 1 source file)\n"
    },
    "FIRST_UPPERCASE_LETTER_IN_A_STRING_ITERATIVE_AND_RECURSIVE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_A_ROTATION_WITH_MAXIMUM_HAMMING_DISTANCE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "LONGEST_REPEATING_SUBSEQUENCE": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['n+1', 'n+1']['n+n+n']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 3,
                "old": "[ 0 ] * n + [ 0 ] * n + [ 0 ] * n",
                "new": "[[0 for _ in range(n+1)] for _ in range(n+1)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/LONGEST_REPEATING_SUBSEQUENCE.py:10: error: Incompatible types in assignment (expression has type \"list[int]\", variable has type \"list[list[int]]\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS.py:9: error: Too many values to unpack (3 expected, 4 provided)  [misc]\nresult2/check/transcoder/java2python/python_typed/FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS.py:11: error: Cannot determine type of \"sum1\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS.py:13: error: Cannot determine type of \"sum2\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS.py:15: error: Cannot determine type of \"sum3\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS.py:16: error: Too many values to unpack (3 expected, 4 provided)  [misc]\nresult2/check/transcoder/java2python/python_typed/FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS.py:19: error: Cannot determine type of \"top1\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS.py:19: error: Cannot determine type of \"top2\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS.py:19: error: Cannot determine type of \"top3\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS.py:24: error: Cannot determine type of \"top1\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS.py:26: error: Cannot determine type of \"top2\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/FIND_MAXIMUM_SUM_POSSIBLE_EQUAL_SUM_THREE_STACKS.py:28: error: Cannot determine type of \"top3\"  [has-type]\nFound 11 errors in 1 file (checked 1 source file)\n"
    },
    "COUNT_INDEX_PAIRS_EQUAL_ELEMENTS_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_CALCULATE_VOLUME_ELLIPSOID": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "HOW_TO_AVOID_OVERFLOW_IN_MODULAR_MULTIPLICATION": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SUM_FACTORS_NUMBER": {
        "change": [
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=2 ",
                "line": 3,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 3,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<=math.sqrt(n) :",
                "line": 3,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 9,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SUM_FACTORS_NUMBER.py:10: error: No overload variant of \"range\" matches argument types \"int\", \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/SUM_FACTORS_NUMBER.py:10: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/SUM_FACTORS_NUMBER.py:10: note:     def range(SupportsIndex, /) -> range\nresult2/check/transcoder/java2python/python_typed/SUM_FACTORS_NUMBER.py:10: note:     def range(SupportsIndex, SupportsIndex, SupportsIndex = ..., /) -> range\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "FIND_MAXIMUM_PRODUCT_OF_A_TRIPLET_IN_ARRAY_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "NUMBER_INDEXES_EQUAL_ELEMENTS_GIVEN_RANGE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS": {
        "change": [
            {
                "type": "del",
                "line": 18,
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": 18,
                "content": "    return ( max_sum // k )",
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return ( max_sum // k )",
                "changetype": "type_RetFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS.py:21: error: \"dict[int, int]\" has no attribute \"has_key\"  [attr-defined]\nresult2/check/transcoder/java2python/python_typed/MAXIMUM_NUMBER_CHOCOLATES_DISTRIBUTED_EQUALLY_AMONG_K_STUDENTS.py:25: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "COUNT_ARRAYS_CONSECUTIVE_ELEMENT_DIFFERENT_VALUES": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FREQUENT_ELEMENT_ARRAY_1": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FREQUENT_ELEMENT_ARRAY_1.py:12: error: \"dict[int, int]\" has no attribute \"has_key\"  [attr-defined]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "MINIMUM_FLIP_REQUIRED_MAKE_BINARY_MATRIX_SYMMETRIC_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PRINT_MATRIX_ANTISPIRAL_FORM": {
        "change": [
            {
                "type": "add",
                "content": [
                    "i--"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "            i=n ",
                "line": 12,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content",
                    "for_update": "content"
                }
            },
            {
                "type": "del",
                "line": 12,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "            while i>l-1 :",
                "line": 12,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "                i -= 1",
                "line": 14,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "i--"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "            i=m ",
                "line": 16,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content",
                    "for_update": "content"
                }
            },
            {
                "type": "del",
                "line": 16,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "            while i>k-1 :",
                "line": 16,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "                i -= 1",
                "line": 18,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FINDING_POWER_PRIME_NUMBER_P_N_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_NUMBER_SEGMENTS_LENGTHS_B_C": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMUM_NUMBER_SUBSETS_DISTINCT_ELEMENTS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_TO_FIND_THE_AREA_OF_PENTAGON": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "float ( 'inf' )",
                "changetype": "longcomp"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "float ( 'inf' )",
                "new": " float((math.sqrt(5*(5+2*(math.sqrt(5))))*a*a))/4",
                "changetype": "longcomp"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DYNAMIC_PROGRAMMING_SET_12_LONGEST_PALINDROMIC_SUBSEQUENCE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SUM_MATRIX_ELEMENT_ELEMENT_INTEGER_DIVISION_ROW_COLUMN_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_POSSIBLE_DIFFERENCE_TWO_SUBSETS_ARRAY": {
        "change": [
            {
                "type": "add",
                "content": [
                    "j++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "        j=i+1 ",
                "line": 5,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 5,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "        while j<n :",
                "line": 5,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "            j += 1",
                "line": 10,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "i++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    i=0 ",
                "line": 3,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 3,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while i<n :",
                "line": 3,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        i += 1",
                "line": 15,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DIAGONALLY_DOMINANT_MATRIX": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "BREAK_NUMBER_THREE_PARTS_1": {
        "change": [
            {
                "type": "del",
                "line": 3,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 3,
                "content": "    count = ( n + 1 ) * ( n + 2 ) // 2",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    count = ( n + 1 ) * ( n + 2 ) // 2",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/BREAK_NUMBER_THREE_PARTS_1.py:10: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "AREA_SQUARE_CIRCUMSCRIBED_CIRCLE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "REMOVE_BRACKETS_ALGEBRAIC_STRING_CONTAINING_OPERATORS": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/REMOVE_BRACKETS_ALGEBRAIC_STRING_CONTAINING_OPERATORS.py:10: error: Variable \"str\" is not valid as a type  [valid-type]\nresult2/check/transcoder/java2python/python_typed/REMOVE_BRACKETS_ALGEBRAIC_STRING_CONTAINING_OPERATORS.py:10: note: See https://mypy.readthedocs.io/en/stable/common_issues.html#variables-vs-type-aliases\nresult2/check/transcoder/java2python/python_typed/REMOVE_BRACKETS_ALGEBRAIC_STRING_CONTAINING_OPERATORS.py:13: error: Name \"Stack\" is not defined  [name-defined]\nresult2/check/transcoder/java2python/python_typed/REMOVE_BRACKETS_ALGEBRAIC_STRING_CONTAINING_OPERATORS.py:37: error: Argument 1 to \"join\" of \"str\" has incompatible type \"list[str? | int]\"; expected \"Iterable[str]\"  [arg-type]\nFound 3 errors in 1 file (checked 1 source file)\n"
    },
    "PROGRAM_FOR_SURFACE_AREA_OF_OCTAHEDRON": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MULTIPLY_TWO_NUMBERS_WITHOUT_USING_MULTIPLY_DIVISION_BITWISE_OPERATORS_AND_NO_LOOPS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "LONGEST_INCREASING_ODD_EVEN_SUBSEQUENCE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_PAIRS_TWO_SORTED_ARRAYS_WHOSE_SUM_EQUAL_GIVEN_VALUE_X_1": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/COUNT_PAIRS_TWO_SORTED_ARRAYS_WHOSE_SUM_EQUAL_GIVEN_VALUE_X_1.py:14: error: Argument 1 to \"intersection\" of \"set\" has incompatible type \"int\"; expected \"Iterable[Any]\"  [arg-type]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "PROGRAM_FOR_FACTORIAL_OF_A_NUMBER_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SUM_SQUARES_BINOMIAL_COEFFICIENTS": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "MAXIMUM_PROFIT_BY_BUYING_AND_SELLING_A_SHARE_AT_MOST_TWICE": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MINIMUM_PRODUCT_SUBSET_ARRAY": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "negmax Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "int(a[0])",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "line": -1,
                "content": "posmin Integer . MAX_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 5,
                "old": "int(a[0])",
                "new": "sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "del",
                "line": 23,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 23,
                "content": "        product = product // negmax",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        product = product // negmax",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/MINIMUM_PRODUCT_SUBSET_ARRAY.py:31: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "FIND_MAXIMUM_AVERAGE_SUBARRAY_OF_K_LENGTH": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PAIR_WITH_GIVEN_PRODUCT_SET_1_FIND_IF_ANY_PAIR_EXISTS_1": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PAIR_WITH_GIVEN_PRODUCT_SET_1_FIND_IF_ANY_PAIR_EXISTS_1.py:19: error: Argument 1 to \"intersection\" of \"set\" has incompatible type \"float\"; expected \"Iterable[Any]\"  [arg-type]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "EVEN_FIBONACCI_NUMBERS_SUM": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_VALUE_OF_Y_MOD_2_RAISED_TO_POWER_X": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "NTH_MULTIPLE_NUMBER_FIBONACCI_SERIES": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/NTH_MULTIPLE_NUMBER_FIBONACCI_SERIES.py:15: error: Need more than 2 values to unpack (3 expected)  [misc]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "PRIMALITY_TEST_SET_5USING_LUCAS_LEHMER_SERIES": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PRIMALITY_TEST_SET_5USING_LUCAS_LEHMER_SERIES.py:9: error: Name \"long\" is not defined  [name-defined]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "NON_REPEATING_ELEMENT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_TO_CHECK_IF_A_GIVEN_NUMBER_IS_LUCKY_ALL_DIGITS_ARE_DIFFERENT": {
        "change": [
            {
                "type": "del",
                "line": 8,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 8,
                "content": "        n = n // 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        n = n // 10",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PROGRAM_TO_CHECK_IF_A_GIVEN_NUMBER_IS_LUCKY_ALL_DIGITS_ARE_DIFFERENT.py:15: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "HEIGHT_COMPLETE_BINARY_TREE_HEAP_N_NODES": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DYNAMIC_PROGRAMMING_HIGH_EFFORT_VS_LOW_EFFORT_TASKS_PROBLEM": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_SORTED_ROWS_MATRIX": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_SUBARRAYS_WITH_SAME_EVEN_AND_ODD_ELEMENTS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIRST_ELEMENT_OCCURRING_K_TIMES_ARRAY": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIRST_ELEMENT_OCCURRING_K_TIMES_ARRAY.py:13: error: Incompatible types in assignment (expression has type \"int | None\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "CHECK_WHETHER_ARITHMETIC_PROGRESSION_CAN_FORMED_GIVEN_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DYNAMIC_PROGRAMMING_SET_14_MAXIMUM_SUM_INCREASING_SUBSEQUENCE": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_14_MAXIMUM_SUM_INCREASING_SUBSEQUENCE.py:9: error: Need more than 2 values to unpack (3 expected)  [misc]\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_14_MAXIMUM_SUM_INCREASING_SUBSEQUENCE.py:19: error: Cannot determine type of \"max\"  [has-type]\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_14_MAXIMUM_SUM_INCREASING_SUBSEQUENCE.py:20: error: Name \"max\" already defined on line 9  [no-redef]\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_14_MAXIMUM_SUM_INCREASING_SUBSEQUENCE.py:21: error: Cannot determine type of \"max\"  [has-type]\nFound 4 errors in 1 file (checked 1 source file)\n"
    },
    "CHECK_IF_STRING_REMAINS_PALINDROME_AFTER_REMOVING_GIVEN_NUMBER_OF_CHARACTERS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SMALLEST_OF_THREE_INTEGERS_WITHOUT_COMPARISON_OPERATORS_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "DYNAMIC_PROGRAMMING_SET_28_MINIMUM_INSERTIONS_TO_FORM_A_PALINDROME": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_28_MINIMUM_INSERTIONS_TO_FORM_A_PALINDROME.py:14: error: Incompatible return value type (got \"tuple[str | int, str | int]\", expected \"int\")  [return-value]\nresult2/check/transcoder/java2python/python_typed/DYNAMIC_PROGRAMMING_SET_28_MINIMUM_INSERTIONS_TO_FORM_A_PALINDROME.py:15: error: Incompatible return value type (got \"object\", expected \"int\")  [return-value]\nFound 2 errors in 1 file (checked 1 source file)\n"
    },
    "RECURSIVELY_BREAK_NUMBER_3_PARTS_GET_MAXIMUM_SUM_1": {
        "change": [
            {
                "type": "del",
                "line": 5,
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": 5,
                "content": "        dp [ i ] = max ( dp [ i // 2 ] + dp [ i // 3 ] + dp [ i // 4 ] , i )",
                "changetype": "type_CallFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        dp [ i ] = max ( dp [ i // 2 ] + dp [ i // 3 ] + dp [ i // 4 ] , i )",
                "changetype": "type_CallFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/RECURSIVELY_BREAK_NUMBER_3_PARTS_GET_MAXIMUM_SUM_1.py:12: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/RECURSIVELY_BREAK_NUMBER_3_PARTS_GET_MAXIMUM_SUM_1.py:12: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/RECURSIVELY_BREAK_NUMBER_3_PARTS_GET_MAXIMUM_SUM_1.py:12: note:     def __getitem__(self, SupportsIndex, /) -> int\nresult2/check/transcoder/java2python/python_typed/RECURSIVELY_BREAK_NUMBER_3_PARTS_GET_MAXIMUM_SUM_1.py:12: note:     def __getitem__(self, slice, /) -> list[int]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "NUMBER_DIGITS_PRODUCT_TWO_NUMBERS": {
        "change": [
            {
                "type": "del",
                "line": 8,
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": 8,
                "content": "        p = p // 10",
                "changetype": "type_AssignFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        p = p // 10",
                "changetype": "type_AssignFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/NUMBER_DIGITS_PRODUCT_TWO_NUMBERS.py:15: error: Incompatible types in assignment (expression has type \"float\", variable has type \"int\")  [assignment]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "CHECK_WHETHER_GIVEN_NUMBER_EVEN_ODD_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "REMOVE_MINIMUM_ELEMENTS_EITHER_SIDE_2MIN_MAX": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "min Integer . MAX_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "int(arr[start])",
                "new": "sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "line": -1,
                "content": "max Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "int(arr[start+1])",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MAXIMUM_SUM_BITONIC_SUBARRAY": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "max_sum Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 4,
                "old": "int(\"-1\")",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "ELEMENTS_TO_BE_ADDED_SO_THAT_ALL_ELEMENTS_OF_A_RANGE_ARE_PRESENT_IN_ARRAY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "TURN_OFF_THE_RIGHTMOST_SET_BIT": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROBABILITY_THREE_RANDOMLY_CHOSEN_NUMBERS_AP": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "NUMBER_UNIQUE_RECTANGLES_FORMED_USING_N_UNIT_SQUARES": {
        "change": [
            {
                "type": "add",
                "content": [
                    "height++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "        height=length ",
                "line": 4,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 4,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "        while height*length<n+1 :",
                "line": 4,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "            height += 1",
                "line": 6,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "length++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    length=1 ",
                "line": 3,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 3,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while length<=math.sqrt(n) :",
                "line": 3,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        length += 1",
                "line": 6,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/NUMBER_UNIQUE_RECTANGLES_FORMED_USING_N_UNIT_SQUARES.py:10: error: No overload variant of \"range\" matches argument types \"int\", \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/NUMBER_UNIQUE_RECTANGLES_FORMED_USING_N_UNIT_SQUARES.py:10: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/NUMBER_UNIQUE_RECTANGLES_FORMED_USING_N_UNIT_SQUARES.py:10: note:     def range(SupportsIndex, /) -> range\nresult2/check/transcoder/java2python/python_typed/NUMBER_UNIQUE_RECTANGLES_FORMED_USING_N_UNIT_SQUARES.py:10: note:     def range(SupportsIndex, SupportsIndex, SupportsIndex = ..., /) -> range\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "THIRD_LARGEST_ELEMENT_ARRAY_DISTINCT_ELEMENTS": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "second Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 9,
                "old": "int(first)",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "line": -1,
                "content": "third Integer . MIN_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 13,
                "old": "int(second)",
                "new": "-sys.maxsize",
                "changetype": "maxmin2"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SEQUENCES_GIVEN_LENGTH_EVERY_ELEMENT_EQUAL_TWICE_PREVIOUS_1": {
        "change": [
            "ASTERROR"
        ],
        "mypyoutput": ""
    },
    "CENTER_ELEMENT_OF_MATRIX_EQUALS_SUMS_OF_HALF_DIAGONALS": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": " ( diag1_left , diag2_right , diag2_left , diag1_right , diag2_left , diag2_right , mat [ n / 2 ] [ n / 2 ] )",
                "changetype": "longcomp"
            },
            {
                "type": "replace2",
                "line": 11,
                "old": " ( diag1_left , diag2_right , diag2_left , diag1_right , diag2_left , diag2_right , mat [ n / 2 ] [ n / 2 ] )",
                "new": " (diag1_left==diag2_rightanddiag2_right==diag2_leftanddiag1_right==diag2_leftanddiag2_right==mat[n/2][n/2])",
                "changetype": "longcomp"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/CENTER_ELEMENT_OF_MATRIX_EQUALS_SUMS_OF_HALF_DIAGONALS.py:13: error: Need type annotation for \"j\"  [var-annotated]\nresult2/check/transcoder/java2python/python_typed/CENTER_ELEMENT_OF_MATRIX_EQUALS_SUMS_OF_HALF_DIAGONALS.py:13: error: Argument 1 to \"enumerate\" has incompatible type \"int\"; expected \"Iterable[Never]\"  [arg-type]\nresult2/check/transcoder/java2python/python_typed/CENTER_ELEMENT_OF_MATRIX_EQUALS_SUMS_OF_HALF_DIAGONALS.py:20: error: Incompatible return value type (got \"tuple[int, int, int, int, int, int, Any]\", expected \"bool\")  [return-value]\nresult2/check/transcoder/java2python/python_typed/CENTER_ELEMENT_OF_MATRIX_EQUALS_SUMS_OF_HALF_DIAGONALS.py:20: error: No overload variant of \"__getitem__\" of \"list\" matches argument type \"float\"  [call-overload]\nresult2/check/transcoder/java2python/python_typed/CENTER_ELEMENT_OF_MATRIX_EQUALS_SUMS_OF_HALF_DIAGONALS.py:20: note: Possible overload variants:\nresult2/check/transcoder/java2python/python_typed/CENTER_ELEMENT_OF_MATRIX_EQUALS_SUMS_OF_HALF_DIAGONALS.py:20: note:     def __getitem__(self, SupportsIndex, /) -> list[int]\nresult2/check/transcoder/java2python/python_typed/CENTER_ELEMENT_OF_MATRIX_EQUALS_SUMS_OF_HALF_DIAGONALS.py:20: note:     def __getitem__(self, slice, /) -> list[list[int]]\nFound 4 errors in 1 file (checked 1 source file)\n"
    },
    "FIND_THE_ELEMENT_BEFORE_WHICH_ALL_THE_ELEMENTS_ARE_SMALLER_THAN_IT_AND_AFTER_WHICH_ALL_ARE_GREATER_THAN_IT": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "rightMin Integer . MAX_VALUE",
                "changetype": "maxmin2"
            },
            {
                "type": "replace2",
                "line": 6,
                "old": "int(arr[-1])",
                "new": "sys.maxsize",
                "changetype": "maxmin2"
            },
            {
                "type": "add",
                "content": "left_max [ i ] < arr [ i ] and right_min [ i ] > arr [ i ]",
                "line": -1,
                "changetype": "ifcond"
            },
            {
                "type": "replace",
                "old": "left_max [ i ] < arr [ i ] and right_min [ i ] > arr [ i ]",
                "new": "(left_max[i]<arr[i] and right_min>arr[i])",
                "line": 8,
                "changetype": "ifcond"
            },
            {
                "type": "add",
                "line": -1,
                "content": "        if left_max [ i ] < arr [ i ] and right_min [ i ] > arr [ i ] :",
                "changetype": "type_indexable"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/FIND_THE_ELEMENT_BEFORE_WHICH_ALL_THE_ELEMENTS_ARE_SMALLER_THAN_IT_AND_AFTER_WHICH_ALL_ARE_GREATER_THAN_IT.py:15: error: Value of type \"int\" is not indexable  [index]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "ROW_WISE_COMMON_ELEMENTS_TWO_DIAGONALS_SQUARE_MATRIX": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "HOW_TO_PRINT_MAXIMUM_NUMBER_OF_A_USING_GIVEN_FOUR_KEYS": {
        "change": [
            {
                "type": "add",
                "content": [
                    "n++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    n=1 ",
                "line": 7,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 7,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while n<7 :",
                "line": 7,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        n += 1",
                "line": 9,
                "changetype": "forupdate"
            },
            {
                "type": "add",
                "content": [
                    "n++"
                ],
                "line": -1,
                "changetype": "forloop"
            },
            {
                "type": "add",
                "content": "    n=7 ",
                "line": 9,
                "changetype": "forinit",
                "errtype": {
                    "for_cond": "content"
                }
            },
            {
                "type": "del",
                "line": 9,
                "changetype": "forinit"
            },
            {
                "type": "add",
                "content": "    while n<N+1 :",
                "line": 9,
                "changetype": "forst"
            },
            {
                "type": "add",
                "content": "        n += 1",
                "line": 11,
                "changetype": "forupdate"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "CASSINIS_IDENTITY": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SUM_MIDDLE_ROW_COLUMN_MATRIX": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "COUNT_DERANGEMENTS_PERMUTATION_SUCH_THAT_NO_ELEMENT_APPEARS_IN_ITS_ORIGINAL_POSITION_1": {
        "change": [
            {
                "type": "add",
                "line": -1,
                "content": "['n+1']['3']",
                "changetype": "arrshape_no_equal"
            },
            {
                "type": "replace2",
                "line": 2,
                "old": "[ 1 , 0 , 1 ]",
                "new": "[0 for _ in range(n+1)]",
                "changetype": "arrshape"
            }
        ],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_SUBARRAY_WITH_GIVEN_SUM": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "FIND_TRIPLETS_ARRAY_WHOSE_SUM_EQUAL_ZERO_2": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MODULUS_TWO_FLOAT_DOUBLE_NUMBERS": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "MOVE_VE_ELEMENTS_END_ORDER_EXTRA_SPACE_ALLOWED": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "SQUARED_TRIANGULAR_NUMBER_SUM_CUBES": {
        "change": [],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/SQUARED_TRIANGULAR_NUMBER_SUM_CUBES.py:8: error: Missing return statement  [return]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "SORT_EVEN_NUMBERS_ASCENDING_ORDER_SORT_ODD_NUMBERS_DESCENDING_ORDER_1": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    },
    "PROGRAM_TO_FIND_REMAINDER_WITHOUT_USING_MODULO_OR_OPERATOR": {
        "change": [
            {
                "type": "del",
                "line": 2,
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": 2,
                "content": "    return ( num - divisor * ( num // divisor ) )",
                "changetype": "type_RetFloatint"
            },
            {
                "type": "add",
                "line": -1,
                "content": "    return ( num - divisor * ( num // divisor ) )",
                "changetype": "type_RetFloatint"
            }
        ],
        "mypyoutput": "result2/check/transcoder/java2python/python_typed/PROGRAM_TO_FIND_REMAINDER_WITHOUT_USING_MODULO_OR_OPERATOR.py:9: error: Incompatible return value type (got \"float\", expected \"int\")  [return-value]\nFound 1 error in 1 file (checked 1 source file)\n"
    },
    "COMPUTE_MODULUS_DIVISION_BY_A_POWER_OF_2_NUMBER": {
        "change": [],
        "mypyoutput": "Success: no issues found in 1 source file\n"
    }
}